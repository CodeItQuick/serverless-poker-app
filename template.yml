AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: amazon-connect-interactive-messages
    Description: Creates AWS Lambda function to be used as an initialization and validation code hook in Amazon Lex Bot for enabling interactive messages in Amazon Connect Chat.
    Author: Amazon Connect CX Innovations
    SpdxLicenseId: MIT-0
    Labels: ['connect', 'chat', 'interactive-messaging', 'contact-center', 'lambda', 'lex', 'bot']
    SemanticVersion: 0.0.1
Globals:
  Function:
    Timeout: 3
  Api:
    BinaryMediaTypes:
      # The ~1 will be replaced with / when deployed
      - '*~1*'
Resources:
  InteractiveMessagingLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: React TodoMVC with a Serverless backend
      Handler: src/index.handler
      Runtime: nodejs12.x
      CodeUri: build/todo.zip
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: todoTable
      Timeout: 5
      Events:
        root:
          Type: Api
          Properties:
            Path: /prod
            Method: get
        getProxy:
          Type: Api
          Properties:
            Path: '/prod/{proxy+}'
            Method: get
        postProxy:
          Type: Api
          Properties:
            Path: '/prod/{proxy+}'
            Method: post
        apiPost:
          Type: Api
          Properties:
            Path: /api
            Method: post
      Environment:
        Variables:
          TABLE:
            Ref: todoTable
      
  todoTable:
    Type: AWS::Serverless::SimpleTable

Outputs:
  InteractiveMessagingLambdaFunction:
    Description: "Interactive Messaging Lex Lambda Function ARN"
    Value: !GetAtt InteractiveMessagingLambdaFunction.Arn
  InteractiveMessagingFunctionIamRole:
    Description: "Implicit IAM Role created for Interactive Messaging Lex Lambda Function"
    Value: !GetAtt InteractiveMessagingLambdaFunctionRole.Arn