{"version":3,"sources":["containers/MainPage/constants.js","containers/MainPage/sampleData.js","containers/MainPage/actions.js","containers/MainPage/CurrentRanges/actions.js","containers/MainPage/CurrentRanges/reducer.js","containers/MainPage/reducer.js","containers/MainPage/CurrentRanges/constants.js","containers/MainPage/ProgressIndicator/constants.js","containers/MainPage/ProgressIndicator/action.js","containers/MainPage/ProgressIndicator/reducer.js","containers/MainPage/EngineClasses/Scenario.js","utils/request.js","containers/MainPage/saga.js","HOC/checkStore.js","utils/history.js","reducers.js","HOC/reducerInjectors.js","HOC/useInjectReducer.js","HOC/constants.js","HOC/sagaInjectors.js","HOC/injectSaga.js","containers/MainPage/ScenarioLoader/scenarioComponent.js","containers/MainPage/EngineClasses/Scenarios.js","containers/MainPage/EngineClasses/RangeObject.js","containers/MainPage/EngineClasses/CardHandSuit.js","containers/MainPage/EngineClasses/CardHandSuitBuilder.js","containers/MainPage/EngineClasses/RangeObjectCollection.js","containers/MainPage/selectors.js","containers/MainPage/Board/Styles.js","containers/MainPage/EngineClasses/findInArray.js","containers/MainPage/EngineClasses/colorCellFn.js","containers/MainPage/Board/TableGridColumn.js","containers/MainPage/EngineClasses/StateUpdate.js","containers/MainPage/Board/index.js","containers/MainPage/BoardLegend/GeneratedLegendTable.js","containers/MainPage/BoardLegend/LegendTable.js","containers/MainPage/EngineClasses/countHandCombo.js","containers/MainPage/BoardLegend/BoardLegend.js","containers/MainPage/InputForm/InputStreet.js","containers/MainPage/InputForm/index.js","containers/MainPage/stateRangeFunctions.js","containers/MainPage/ProgressIndicator/selector.js","containers/MainPage/ProgressIndicator/index.js","containers/MainPage/SuitSelector/index.js","containers/MainPage/CurrentRanges/selector.js","containers/MainPage/CurrentRanges/index.js","containers/MainPage/index.js","containers/MainPage/ScenarioLoader/ScenariosComponent.js","containers/MainPage/ScenarioLoader/index.js","components/NavBar/PositionComponent.js","components/NavBar/SaveModal.js","components/NavBar/index.js","components/MainContainer/index.js","utils/ErrorBoundary.js","containers/App/reducer.js","localStorage.js","configureStore.js","containers/App/App.js","create-waiter.js","serviceWorker.js","index.js"],"names":["SET_HAND_RANGE","SET_DEAD_CARDS","GET_SCENARIO_SUCCESS","ranges","Street","BetType","hands","sampleData","mode","street","streetAction","suitSelection","isIP","useTwoFlopSizes","rangeSelectionArray","folderID","folderSubgroupName","folderSubgroupRangeName","rangeColors","rangeRepoIP","JSON","parse","stringify","rangeRepoOOP","initSetHandRange","data","state","type","setHandRange","setDeadCards","length","deadcards","transformHandRange","repoType","filter","HandName","map","PokerHands","split","getScenarioSuccessProcess","board","Object","keys","copy","Board","substr","getScenarioFail","getAllScenarioSuccessProcess","action","scenarioBoards","changeModeSuitSelectionSuccess","indexOf","cardsSuit","changeUseOneFlopBetsize","setHandRangeSelect","name","value","loadEquities","functionOne","functionTwo","functionThree","currentRangesReducer","initialState","SET_IS_IP","setIsIP","position","newRangeOOP","newRangeIP","newRanges","progressIndicatorReducer","handEquities","combine","Scenario","ScenarioName","DefenderPosition","OpenerPosition","this","parseJSON","response","status","json","checkStatus","error","Error","statusText","request","url","options","fetch","then","saveScenario","getScenario","getAllScenario","communicateMessage","handData","baseURL","user","Filename","token","requestUrl","headers","Authorization","body","positionOpener","positionDefender","requestParams","method","credentials","call","console","log","scenario","boardcards","displayDeadcards","put","message","all","takeLatest","conformsTo","pkg","isFunction","isObject","checkStore","store","shape","dispatch","subscribe","getState","replaceReducer","runSaga","injectedReducers","injectedSagas","invariant","history","createBrowserHistory","createReducer","rootReducer","combineReducers","global","globalReducer","router","connectRouter","injectReducerFactory","isValid","key","reducer","isString","isEmpty","Reflect","has","getInjectors","injectReducer","WrappedComponent","ReducerInjector","props","context","React","Component","contextType","ReactReduxContext","displayName","hoistNonReactStatics","useInjectReducer","useContext","useEffect","DAEMON","allowedModes","checkKey","checkDescriptor","descriptor","saga","includes","injectSagaFactory","args","newDescriptor","hasSaga","task","ejectSagaFactory","cancel","injectSaga","ejectSaga","useInjectSaga","injectors","ScenarioComponent","useDispatch","Table","Row","id","displayScenarioName","Cell","displayOpenerPosition","displayDefenderPosition","Button","color","onClick","className","Scenarios","scenarioArray","scenarios","Math","floor","idx","activePage","availableScenarios","_","RangeObject","cardSuitHandArray","newSuit","validRange","reduce","acc","curr","getHand","shortHandNotation","prange","reverse","extraCardsNotation","forEach","SuitHand","join","trim","cardClone","CardSuitHand","assign","colorCards","equity","CardHandSuit","cardOne","cardTwo","suit","rangeObj","cardHandSuitObj","cardHandSuit","hand","arrayOfCardHandSuit","Index","cardHandSuits","isInRange","orderedCard","CardHandSuitBuilder","cardOnePar","cardTwoPar","createdSuitHand","suitPar","assignSuit","buildWithCardOneTwoAndNoSuit","buildWithCardOneAndSuitCardTwoAndSuit","buildWithCardOneCardTwoAndSpecificHand","cardOrder","_getCards","_displayCardSuit","optionalCardSuitOne","substring","optionalCardSuitTwo","combinedSingleHandSuit","cardOneRank","cardTwoRank","card1","card2","RangeObjectCollection","rangeArray","newRange","rangeObjectCollection","_copyRangeObject","range","_copyHands","build","filterRange","possiblePreviousStreet","previousStreetIdx","currStreet","allowedActionsWhitelist","push","blackList","selectGlobal","makeSelectMode","createSelector","globalState","makeSelectRangeRepoIP","displayRange","makeSelectRangeRepoOOP","makeSelectSelectedStreet","displayRangeByStreet","makeSelectRange","makeSelectDeadcards","ColorCard","styled","animated","button","StyledRow","StyledCol","suitString","border_attrib","findInArray","cards","cardHand","card","equalPairs","equalSuitedHands","equalOffsuitedHands","equalPairsSpecificCombos","colorLengthThreeHand","selectedHandsArr","checkAndReturnColorHandArray","elementArray","isCheckHandArr","elementArraySpecific","specificHandArray","colorHandArray","isCheck","TableGridColumn","bind","allPreflopHands","useState","updateSuitString","newColors","equalHandFn","checkHandSuited","checkHandOffsuited","checkHandPaired","colorCell","newCSSGradient","BoardOfHands","generateCardGrid","PreflopRangesOnly","PreflopRanges","RangesSelected","displayInfo","rangeObject","allHandsOneArray","setNewManyHands","row","columnJSX","Body","isOnMouseDownEventPushed","memo","down","first","withConnect","connect","getRangesSelected","getLoadEquities","getCards","getOtherRange","getHandEquities","getMode","getRanges","getRangesPreflop","displayPreviousRange","SelectedRanges","otherRange","preflopRanges","compose","onMouseOverHandler","manyHands","setManyHands","instanceOfBoardHands","updateInstanceOfBoardHands","useGesture","onDrag","onMouseDownEvent","threshold","filterTaps","onMove","delay","updateCardGrid","view","celled","striped","unstackable","StyledColorRow","index","GeneratedLegendTable","streetActions","numberOfCombos","toFixed","StyledInvertedRow","LegendTable","indexOfActions","fixed","HeaderCell","comboCounter","chosenStreet","transformedCardHand","suitedComboCounter","offsuitComboCounter","pairComboCounter","numOccurances","countBy","charAt","numHandCardsInBoard","boardCard","getHandArray","suitOfMatchedCards","StyledContainer","Container","getDeadcards","getSelectedRange","wholeRange","updateIndexOfActions","updateNumberOfCombos","countHandCombo","Preflop","Flop","Turn","River","InputStreet","onHandleStreetHandler","Segment","Group","size","horizontal","style","height","fontSize","inverted","Form","Input","stateOptions","rank","suited","text","addSuits","getRange","getRangeRepoIP","getRangeRepoOOP","getPosition","selectedRanges","Position","onManuallyChooseSuitsHandler","active","stacked","Label","ribbon","Icon","Dropdown","placeholder","fluid","selection","multiple","search","onChange","e","values","textAlign","mapNewHandRange","oldHandRange","draftModeStreet","draftModeStreetAction","actionDataCards","getRangesObject","copyHands","copyRangesFrom","copyRange","RangeObj","handsInRange","inpRange","filterForHandsInRange","getIsIp","getStreet","getSelectedRanges","handsIPUsed","setHandsIPUsed","handsOOPUsed","setHandsOOPUsed","onChangePosition","assignPositions","Step","completed","Content","Description","primary","open","onCloseHandler","opens","setOpens","onSuitSelectHandler","assignedsuit","Modal","show","onHide","Header","padded","buttonColors","Valuebet","Bluff","CheckCall","CheckFold","SmallValuebet","SmallBluff","Raise4BetCall","Raise4BetFold","RaiseCall","RaiseFold","CheckDown","getSelectedStreet","selectedStreet","changingStreet","updateChangingStreet","structured","selectable","stackable","displayProperRange","betType","getFriendlyRangeOutput","rangeText","MainPageContainer","div","LeftPane","RightPane","getMapRange","getSelectRange","openChooseSuitModal","updateOpenChooseSuitModal","SuitSelector","newHandRange","onHandleStreetHandlerButtons","ScenariosComponent","filteredScenarios","panes","numScenarioArray","windowWidth","menuItem","render","StyledTab","Tab","getScenarios","onCloseModal","updateActivePage","filteredScenariosPosition","totalPages","updateTotalPages","setInjectedScenarios","window","innerWidth","setWindowWidth","injectToken","addEventListener","removeEventListener","Title","padding","filteredScenariosArray","onTabChange","activeIndex","Pagination","defaultActivePage","onPageChange","pointing","secondary","Footer","PositionField","Field","PositionComponent","setPosition","componentLabel","Radio","label","checked","SaveModal","isOpen","setIsOpen","onSave","setPositionOpener","setPositionDefender","inputBoard","updateInputBoard","updateFilename","onSubmit","isAuthenticated","loginWithRedirect","logout","updateTourOpen","setState","isOpenHandler","Menu","Item","MainContainer","children","ErrorBoundary","hasError","errorInfo","localStorage","clear","setItem","loading","menus","categories","regions","loadState","serializedState","getItem","saveState","configureStore","composeEnhancers","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","persistedState","createStore","run","stateSelector","steps","selector","content","useAuth0","isTourOpen","getAccessTokenSilently","updateToken","addResponseMessage","a","audience","scope","accessToken","onRequestClose","handleNewUserMessage","newMessage","title","subtitle","Boolean","location","hostname","match","throttle","ReactDOM","domain","clientId","redirectUri","exact","path","component","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.304c9bcd.chunk.js","sourcesContent":["/*\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const SET_HAND_RANGE = \"handrangeAPI/MainPage/SET_HAND_RANGE\";\nexport const SET_HAND_RANGE_SELECT =\n  \"handrangeAPI/MainPage/SET_HAND_RANGE_SELECT\";\nexport const INIT_ALL_USER_HAND_RANGES =\n  \"handrangeAPI/MainPage/INIT_ALL_USER_HAND_RANGES\";\n\nexport const ALL_USER_HAND_RANGES_SUCCESS =\n  \"handrangeAPI/MainPage/ALL_USER_HAND_RANGES_SUCCESS\";\n\nexport const ALL_USER_HAND_RANGES_FAIL =\n  \"handrangeAPI/MainPage/ALL_USER_HAND_RANGES_FAIL\";\nexport const MAIN_SET_IS_IP = \"handrangeAPI/MainPage/MAIN_SET_IS_IP\";\nexport const INIT_CREATE_NEW_FOLDER =\n  \"handrangeAPI/MainPage/INIT_CREATE_NEW_FOLDER\";\nexport const CREATE_NEW_FOLDER_SUCCESS =\n  \"handrangeAPI/MainPage/CREATE_NEW_FOLDER_SUCCESS\";\nexport const CREATE_NEW_FOLDER_FAIL =\n  \"handrangeAPI/MainPage/CREATE_NEW_FOLDER_FAIL\";\n\nexport const SET_HAND_RANGE_GROUP =\n  \"handrangeAPI/MainPage/SET_HAND_RANGE_GROUP\";\n\nexport const SET_DYNAMIC_FOLDER_INFO =\n  \"handrangeAPI/MainPage/SET_DYNAMIC_FOLDER_INFO\";\n\nexport const SAVE_AND_LOAD = \"handrangeAPI/MainPage/SAVE_AND_LOAD\";\n\nexport const LOAD_NEW_FOLDER = \"handrangeAPI/MainPage/LOAD_NEW_FOLDER\";\n\nexport const SET_DEAD_CARDS = \"handrangeAPI/MainPage/SET_DEAD_CARDS\";\nexport const GET_DEAD_CARDS = \"handrangeAPI/MainPage/GET_DEAD_CARDS\";\n\nexport const SET_IS_IP = \"handrangeAPI/MainPage/IS_IP\";\nexport const LOAD_EQUITIES = \"handrangeAPI/MainPage/LOAD_EQUITIES\";\nexport const LOAD_EQUITIES_SUCCESS =\n  \"handrangeAPI/MainPage/LOAD_EQUITIES_SUCCESS\";\n\nexport const RESET_STATE = \"handrangeAPI/MainPage/RESET_STATE\";\n\nexport const INIT_SAVE_SCENARIO = \"handrangeAPI/MainPage/INIT_SAVE_SCENARIO\";\n\nexport const SAVE_SCENARIO_SUCCESS =\n  \"handrangeAPI/MainPage/SAVE_SCENARIO_SUCCESS\";\nexport const SAVE_SCENARIO_FAILED =\n  \"handrangeAPI/MainPage/SAVE_SCENARIO_FAILED\";\n\nexport const INIT_GET_SCENARIO = \"handrangeAPI/MainPage/INIT_GET_SCENARIO\";\nexport const GET_SCENARIO_SUCCESS =\n  \"handrangeAPI/MainPage/GET_SCENARIO_SUCCESS\";\nexport const GET_SCENARIO_FAIL = \"handrangeAPI/MainPage/GET_SCENARIO_FAIL\";\n\nexport const INIT_GET_ALL_SCENARIO =\n  \"handrangeAPI/MainPage/INIT_GET_ALL_SCENARIO\";\nexport const GET_ALL_SCENARIO_SUCCESS =\n  \"handrangeAPI/MainPage/GET_ALL_SCENARIO_SUCCESS\";\nexport const GET_ALL_SCENARIO_FAIL =\n  \"handrangeAPI/MainPage/GET_ALL_SCENARIO_FAIL\";\n\nexport const SET_HAND_RANGE_ARRAY =\n  \"handrangeAPI/MainPage/SET_HAND_RANGE_ARRAY\";\n\nexport const CHANGE_MODE_SUIT_SELECTION =\n  \"handrangeAPI/MainPage/CHANGE_MODE_SUIT_SELECTION\";\n\nexport const START_CONVERSATION =\n  \"handrangeAPI/MainPage/START_CONVERSATION\";","const ranges = [\n  {\n    Street: \"Preflop\",\n    BetType: \"Raise4BetCall\",\n    hands: []\n  },\n  {\n    Street: \"Preflop\",\n    BetType: \"Raise4BetFold\",\n    hands: []\n  },\n  {\n    Street: \"Preflop\",\n    BetType: \"RaiseCall\",\n    hands: []\n  },\n  {\n    Street: \"Preflop\",\n    BetType: \"RaiseFold\",\n    hands: []\n  },\n  {\n    Street: \"Flop\",\n    BetType: \"Valuebet\",\n    hands: []\n  },\n  {\n    Street: \"Flop\",\n    BetType: \"Bluff\",\n    hands: []\n  },\n  {\n    Street: \"Flop\",\n    BetType: \"CheckCall\",\n    hands: []\n  },\n  {\n    Street: \"Flop\",\n    BetType: \"CheckFold\",\n    hands: []\n  },\n  {\n    Street: \"Flop\",\n    BetType: \"SmallValuebet\",\n    hands: []\n  },\n  {\n    Street: \"Flop\",\n    BetType: \"SmallBluff\",\n    hands: []\n  },\n  {\n    Street: \"Turn\",\n    BetType: \"Valuebet\",\n    hands: []\n  },\n  {\n    Street: \"Turn\",\n    BetType: \"Bluff\",\n    hands: []\n  },\n  {\n    Street: \"Turn\",\n    BetType: \"CheckCall\",\n    hands: []\n  },\n  {\n    Street: \"Turn\",\n    BetType: \"CheckFold\",\n    hands: []\n  },\n  {\n    Street: \"River\",\n    BetType: \"Valuebet\",\n    hands: []\n  },\n  {\n    Street: \"River\",\n    BetType: \"Bluff\",\n    hands: []\n  },\n  {\n    Street: \"River\",\n    BetType: \"CheckCall\",\n    hands: []\n  },\n  {\n    Street: \"River\",\n    BetType: \"CheckFold\",\n    hands: []\n  }\n];\nconst sampleData = {\n  mode: {\n    street: \"Preflop\",\n    streetAction: \"Raise4BetCall\",\n    suitSelection: [],\n    isIP: true,\n    useTwoFlopSizes: false\n  },\n  rangeSelectionArray: {\n    folderID: \"Evan's Second Folder\",\n    folderSubgroupName: \"Opening Ranges\",\n    folderSubgroupRangeName: \"UTG\"\n  },\n  rangeColors: {\n    \"0\": [],\n    \"1\": [],\n    \"2\": [],\n    \"3\": []\n  },\n  rangeRepoIP: JSON.parse(JSON.stringify(ranges)),\n  rangeRepoOOP: JSON.parse(JSON.stringify(ranges))\n};\n\nexport { sampleData, ranges };\n","import {\n  SET_HAND_RANGE,\n  SET_HAND_RANGE_SELECT,\n  SET_DEAD_CARDS,\n  INIT_SAVE_SCENARIO,\n  INIT_GET_ALL_SCENARIO,\n  GET_ALL_SCENARIO_SUCCESS,\n  INIT_GET_SCENARIO,\n  GET_SCENARIO_SUCCESS,\n  CHANGE_MODE_SUIT_SELECTION,\n  START_CONVERSATION\n} from \"./constants\";\n\nexport function initSetHandRangeSelect(data) {\n  return {\n    type: SET_HAND_RANGE_SELECT,\n    data,\n  };\n}\nexport function setHandRangeSelect({ name, value }, state) {\n  return {\n    ...state,\n    mode: {\n      suitSelection: state?.mode?.suitSelection || [],\n      isIP: state?.mode?.isIP || true,\n      useTwoFlopSizes: state?.mode?.useTwoFlopSizes || false,\n      street: name || \"Preflop\",\n      streetAction: value,\n    },\n    loadEquities: false,\n  };\n}\n\nexport function initSetHandRange(data, state) {\n  return {\n    type: SET_HAND_RANGE,\n    data,\n  };\n}\nexport function setHandRange(ranges, state) {\n  return {\n    ...state,\n    ranges: [...ranges],\n  };\n}\n\nexport function initSetDeadCards(data) {\n  return {\n    type: SET_DEAD_CARDS,\n    data,\n  };\n}\n\nexport function setDeadCards(data, state) {\n  if (data.length > 4) {\n    return {\n      ...state,\n      deadcards: data,\n      mode: {\n        isIP: state?.mode?.isIP,\n        suitSelection: state?.mode?.suitSelection,\n        useTwoFlopSizes: state?.mode?.useTwoFlopSizes,\n        street: \"River\",\n        streetAction: \"Valuebet\",\n      },\n    };\n  } else if (data.length > 3) {\n    return {\n      ...state,\n      deadcards: data,\n      mode: {\n        isIP: state?.mode?.isIP,\n        suitSelection: state?.mode?.suitSelection,\n        useTwoFlopSizes: state?.mode?.useTwoFlopSizes,\n        street: \"Turn\",\n        streetAction: \"Valuebet\",\n      },\n    };\n  } else if (data.length > 2) {\n    return {\n      ...state,\n      deadcards: data,\n      mode: {\n        isIP: state?.mode?.isIP,\n        suitSelection: state?.mode?.suitSelection,\n        useTwoFlopSizes: state?.mode?.useTwoFlopSizes,\n        street: \"Flop\",\n        streetAction: \"Valuebet\",\n      },\n    };\n  } else {\n    return {\n      ...state,\n      deadcards: data,\n      mode: {\n        isIP: state?.mode?.isIP,\n        suitSelection: state?.mode?.suitSelection,\n        useTwoFlopSizes: state?.mode?.useTwoFlopSizes,\n        street: \"Preflop\",\n        streetAction: \"Raise4BetCall\",\n      },\n    };\n  }\n}\n\nexport function getScenarioSuccess(data) {\n  return {\n    type: GET_SCENARIO_SUCCESS,\n    data,\n  };\n}\n\nexport const transformHandRange = (data, repoType) =>\n  data\n    .filter(({ HandName }) => HandName === repoType)\n    .map(({ BetType, Street, PokerHands }) => ({\n      Street,\n      BetType,\n      hands: PokerHands.length === 0 ? [] : PokerHands.split(\", \"),\n    }));\n\nexport const assignDeadcards = (board) => {\n  if (board.length > 4 * 2)\n    return [\n      board.substr(0, 2),\n      board.substr(2, 2),\n      board.substr(4, 2),\n      board.substr(6, 2),\n      board.substr(8, 2),\n    ];\n  else if (board.length > 3 * 2)\n    return [\n      board.substr(0, 2),\n      board.substr(2, 2),\n      board.substr(4, 2),\n      board.substr(6, 2),\n    ];\n  else if (board.length > 2 * 2)\n    return [board.substr(0, 2), board.substr(2, 2), board.substr(4, 2)];\n  else if (board.length > 1 * 2)\n    return [board.substr(0, 2), board.substr(2, 2)];\n  else if (board.length > 0 * 2) return [board.substr(0, 2)];\n  else return [];\n};\n\nexport function getScenarioSuccessProcess(data, state) {\n  data = Object.keys(data).map((copy) => data[copy]);\n  return {\n    ...state,\n    rangeRepoIP: transformHandRange(data, \"rangeRepoIP\"),\n    rangeRepoOOP: transformHandRange(data, \"rangeRepoOOP\"),\n    deadcards: assignDeadcards(data[0]?.Board),\n    mode: {\n      ...state.mode,\n      street: \"Flop\",\n      streetAction: \"Valuebet\",\n      isIP: true,\n    },\n    ranges: transformHandRange(data, \"rangeRepoIP\"),\n  };\n}\n\nexport function getScenarioFail(data, state) {\n  return {\n    ...state,\n    data,\n  };\n}\nexport function getAllScenarioSuccess(data) {\n  return {\n    type: GET_ALL_SCENARIO_SUCCESS,\n    data,\n  };\n}\nexport function getAllScenarioSuccessProcess(action, state) {\n  return {\n    ...state,\n    scenarioBoards: action,\n  };\n}\n\nexport function initSaveScenario(data) {\n  return {\n    type: INIT_SAVE_SCENARIO,\n    data,\n  };\n}\n\nexport function initGetScenario(data) {\n  return {\n    type: INIT_GET_SCENARIO,\n    data,\n  };\n}\n\nexport function initGetAllScenario(data, state) {\n  return {\n    type: INIT_GET_ALL_SCENARIO,\n    data,\n  };\n}\n\nexport function getAllScenarioFail(data, state) {\n  return {\n    ...state,\n    data,\n  };\n}\n\nexport function changeModeSuitSelection(data) {\n  return {\n    type: CHANGE_MODE_SUIT_SELECTION,\n    data,\n  };\n}\n\nexport function changeModeSuitSelectionSuccess(mode, action, state) {\n  if (mode.suitSelection.indexOf(action.data) >= 0) {\n    return {\n      ...state,\n      mode: {\n        ...state.mode,\n        suitSelection: mode.suitSelection.filter(\n          (cardsSuit) => cardsSuit !== action.data\n        ),\n      },\n    };\n  } else {\n    return {\n      ...state,\n      mode: {\n        ...state.mode,\n        suitSelection: [...mode.suitSelection, action.data],\n      },\n    };\n  }\n}\n\nexport function changeUseOneFlopBetsize(data, state) {\n  return {\n    ...state,\n    mode: {\n      useTwoFlopSizes: data,\n    },\n  };\n}\n\n\nexport function initStartConversation(data) {\n  return {\n    type: START_CONVERSATION,\n  };\n}","import { SET_HAND_RANGE_SELECT } from \"./constants\";\n\n\nconst initSetHandRangeSelect = (data) => {\n  return {\n    type: SET_HAND_RANGE_SELECT,\n    data\n  }\n}\nexport { initSetHandRangeSelect } \nexport function setHandRangeSelect({ name, value }, state) {\n\treturn {\n\t\t...state,\n\t\tmode: {\n\t\t\tsuitSelection: state?.mode?.suitSelection || [],\n\t\t\tisIP: state.mode.isIP,\n\t\t\tuseTwoFlopSizes: state?.mode?.useTwoFlopSizes || false,\n\t\t\tstreet: name || 'Preflop',\n\t\t\tstreetAction: value\n\t\t},\n\t\tloadEquities: false\n\t};\n}","import { SET_HAND_RANGE_SELECT } from './constants';\n\nimport { sampleData, ranges } from '../sampleData.js';\nimport { setHandRangeSelect } from './actions.js';\nimport { initialState } from '../reducer';\nimport mainPageReducer from '../reducer';\n\n//TODO: Make ranges convert between easy to read ranges\nexport const currentRangesReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_HAND_RANGE_SELECT:\n\t\t\treturn setHandRangeSelect(action.data, state);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default currentRangesReducer;\nexport { initialState };\n","import {\n  SET_HAND_RANGE,\n  SET_DEAD_CARDS,\n  GET_SCENARIO_SUCCESS,\n  GET_ALL_SCENARIO_SUCCESS,\n  MAIN_SET_IS_IP,\n  CHANGE_MODE_SUIT_SELECTION,\n} from \"./constants.js\";\n\nimport { sampleData, ranges } from \"./sampleData.js\";\nimport {\n  setHandRange,\n  setDeadCards,\n  mainSetIsIP,\n  getAllScenarioSuccessProcess,\n  getScenarioSuccessProcess,\n  changeModeSuitSelectionSuccess,\n} from \"./actions.js\";\n\nimport { currentRangesReducer } from \"./CurrentRanges/reducer\";\nimport progressIndicatorReducer from \"./ProgressIndicator/reducer.js\";\n\nconst initialState = {\n  mode: sampleData.mode,\n  rangeSelectionArray: sampleData.rangeSelectionArray,\n  rangeColors: sampleData.rangeColors,\n  rangeRepoIP: sampleData.rangeRepoIP,\n  rangeRepoOOP: sampleData.rangeRepoOOP,\n  ranges: ranges,\n  deadcards: [],\n  loadEquities: false,\n  handEquities: [{}, {}],\n  scenarioBoards: [],\n};\n\n//TODO: Make ranges convert between easy to read ranges\nexport const mainPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_HAND_RANGE: //?\n      return setHandRange(action.data, state);\n\n    case SET_DEAD_CARDS:\n      return setDeadCards(action.data, state);\n\n    case GET_SCENARIO_SUCCESS:\n      return getScenarioSuccessProcess(action.data, state);\n\n    case GET_ALL_SCENARIO_SUCCESS:\n      return getAllScenarioSuccessProcess(action.data, state);\n\n    case CHANGE_MODE_SUIT_SELECTION:\n      return changeModeSuitSelectionSuccess(state.mode, action, state);\n    default:\n      return state;\n  }\n};\nconst combined = (functionOne, functionTwo, functionThree) => (state, action) =>\n  functionOne(functionTwo(functionThree(state, action), action), action);\n\nconst combine = combined(\n  mainPageReducer,\n  progressIndicatorReducer,\n  currentRangesReducer\n);\nexport default combine;\nexport { initialState };\n","export const SET_HAND_RANGE_SELECT = 'handrangeAPI/MainPage/CurrentRanges/SET_HAND_RANGE_SELECT';\n","export const SET_IS_IP = 'handrangeAPI/MainPage/ProgressIndicator/IS_IP';\n","import { SET_IS_IP } from './constants';\n\nexport const setIsIP = ({ position, newRangeOOP, newRangeIP, newRanges }, state) => {\n\treturn {\n\t\t...state,\n\t\tmode: {\n\t\t\t...state.mode,\n\t\t\tisIP: position\n\t\t},\n\t\trangeRepoOOP: newRangeOOP,\n\t\trangeRepoIP: newRangeIP,\n\t\tranges: newRanges\n\t};\n};\n\nexport const initIsIP = (data) => {\n\treturn {\n\t\ttype: SET_IS_IP,\n\t\tdata\n\t};\n};\n","import { SET_IS_IP } from './constants';\nimport { setIsIP } from './action';\nimport { initialState } from '../reducer';\nconst progressIndicatorReducer = function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_IS_IP:\n\t\t\treturn setIsIP(action.data, state);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default progressIndicatorReducer;\n","class Scenario {\n  constructor({ board, ScenarioName, DefenderPosition, OpenerPosition }) {\n    this.deadcards = board;\n    this.ScenarioName = ScenarioName;\n    this.OpenerPosition = OpenerPosition;\n    this.DefenderPosition = DefenderPosition;\n  }\n\n  displayDeadcards() {\n    return this.deadcards;\n  }\n  displayOpenerPosition() {\n    return this.OpenerPosition;\n  }\n  displayDefenderPosition() {\n    return this.DefenderPosition;\n  }\n  displayScenarioName() {\n    return this.ScenarioName;\n  }\n}\n\nexport default Scenario;\n","import fetch from \"node-fetch\";\n\n/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options).then(checkStatus).then(parseJSON);\n}\n","import { call, put, all, takeLatest } from \"redux-saga/effects\";\n\nimport {\n  INIT_SAVE_SCENARIO,\n  INIT_GET_SCENARIO,\n  INIT_GET_ALL_SCENARIO,\n  START_CONVERSATION\n} from \"./constants\";\nimport {\n  getScenarioSuccess,\n  getScenarioFail,\n  getAllScenarioSuccess,\n} from \"./actions\";\nimport request from \"../../utils/request\";\n\nconst baseURL = \"https://www.poker-range-appalyzer.com\";\n\n/**\n * Get All Hand Ranges request/response handler\n */\nexport function* saveScenario({\n  data: {\n    deadcards,\n    rangeRepoIP,\n    rangeRepoOOP,\n    user,\n    OpenerPosition,\n    DefenderPosition,\n    Filename,\n    token,\n  },\n}) {\n  const requestUrl = `${baseURL}/api/private/insert`;\n\n  if (!token) return;\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${token}`,\n  };\n  const body = {\n    deadcards,\n    rangeRepoIP,\n    rangeRepoOOP,\n    user,\n    positionOpener: OpenerPosition,\n    positionDefender: DefenderPosition,\n    Filename,\n  };\n\n  const requestParams = {\n    body: JSON.stringify(body),\n    headers,\n    method: \"POST\",\n    credentials: \"include\",\n  };\n\n  try {\n    yield call(request, requestUrl, requestParams);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/**\n * Get All Hand Ranges request/response handler\n */\nexport function* getScenario({ data: { scenario, token } }) {\n  const requestUrl = `${baseURL}/api/private/get-scenario`;\n\n  if (!token) return;\n\n  try {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    };\n    const body = {\n      boardcards: scenario.displayDeadcards(),\n    };\n\n    const requestParams = {\n      body: JSON.stringify(body),\n      headers,\n      method: \"POST\",\n      credentials: \"include\",\n    };\n\n    //yield call/put/cancelled APICALL\n    const response = yield call(request, requestUrl, requestParams);\n\n    yield put(getScenarioSuccess(response));\n    // yield put(allUserHandRangesSuccess(allRanges));\n  } catch (err) {\n    console.log(err);\n    yield put(getScenarioFail(err));\n\n    //yield errorHandling\n    // yield put(allUserHandRangesFail(err));\n  }\n}\n\n/**\n * Get All Hand Ranges request/response handler\n */\nexport function* getAllScenario({ data: token }) {\n  const requestUrl = `${baseURL}/api/private/get-all-scenario`;\n\n  if (!token) return;\n\n  try {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    };\n\n    const requestParams = {\n      headers,\n      method: \"POST\",\n      credentials: \"include\",\n    };\n\n    //yield call/put/cancelled APICALL\n    const response = yield call(request, requestUrl, requestParams);\n    yield put(getAllScenarioSuccess(response));\n  } catch (err) {\n    console.log(err);\n    // yield put(getScenarioFail(err));\n\n    //yield errorHandling\n    // yield put(allUserHandRangesFail(err));\n  }\n}\n\nconst message = { \n    \"messageVersion\": \"1.0\",\n    \"invocationSource\": \"DialogCodeHook\",\n    \"userId\": \"c6ff70c5-c315-4300-a817-5c0a17a01fa4\",\n    \"sessionAttributes\": {},\n    \"bot\": {\n        \"name\": \"InteractiveMessageBot\",\n        \"alias\": \"$LATEST\",\n        \"version\": \"$LATEST\"\n    },\n    \"outputDialogMode\": \"Text\",\n    \"currentIntent\": {\n        \"name\": \"InteractiveMessageIntent\",\n        \"slots\": {\n            \"action\": null,\n            \"departmentnull\": null,\n            \"interactiveOption\": null\n        },\n        \"confirmationStatus\": \"None\"\n    },\n    \"inputTranscript\": \"help\",\n    \"recentIntentSummaryView\": null\n  }\n\n/**\n * Get All Hand Ranges request/response handler\n */\nexport function* communicateMessage({ data = message }) {\n  const requestUrl = `https://bod4vmmmog.execute-api.us-east-1.amazonaws.com/Prod/api`;\n  \n  // if (!token) return;\n\n  try {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      // Authorization: `Bearer ${token}`,\n    };\n\n    const requestParams = {\n      headers,\n      method: \"POST\",\n      body: JSON.stringify(data)\n    };\n\n    //yield call/put/cancelled APICALL\n    const response = yield call(request, requestUrl, requestParams);\n    console.log(response);\n    // yield put(getAllScenarioSuccess(response));\n  } catch (err) {\n    console.log(err);\n    // yield put(getScenarioFail(err));\n\n    //yield errorHandling\n    // yield put(allUserHandRangesFail(err));\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport default function* handData() {\n  yield all([\n    takeLatest(INIT_SAVE_SCENARIO, saveScenario),\n    takeLatest(INIT_GET_SCENARIO, getScenario),\n    takeLatest(INIT_GET_ALL_SCENARIO, getAllScenario),\n    takeLatest(START_CONVERSATION, communicateMessage)\n  ]);\n}\n","import invariant from \"invariant\";\nimport pkg from \"lodash\";\nconst { conformsTo, isFunction, isObject } = pkg;\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    \"(app/utils...) injectors: Expected a valid redux store\"\n  );\n}\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport history from './utils/history';\nimport globalReducer, { initialState } from './containers/MainPage/reducer';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n\tconst rootReducer = combineReducers({\n\t\tglobal: globalReducer,\n\t\trouter: connectRouter(history),\n\t\t...injectedReducers\n\t});\n\n\treturn rootReducer;\n} //?\n","import invariant from \"invariant\";\nimport { isEmpty, isFunction, isString } from \"lodash\";\n\nimport checkStore from \"./checkStore\";\nimport createReducer from \"../reducers\";\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      \"(app/utils...) injectReducer: Expected `reducer` to be a reducer function\"\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true)\n  };\n}\n","import React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { ReactReduxContext } from \"react-redux\";\n\nimport getInjectors from \"./reducerInjectors\";\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withReducer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      \"Component\"})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      getInjectors(context.store).injectReducer(key, reducer);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, []);\n};\n\nexport { useInjectReducer };\n","export const RESTART_ON_REMOUNT = \"@@saga-injector/restart-on-remount\";\nexport const DAEMON = \"@@saga-injector/daemon\";\nexport const ONCE_TILL_UNMOUNT = \"@@saga-injector/once-till-unmount\";\n","import invariant from \"invariant\";\nimport { isEmpty, isFunction, isString, conformsTo } from \"lodash\";\n\nimport checkStore from \"./checkStore\";\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from \"./constants\";\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = key =>\n  invariant(\n    isString(key) && !isEmpty(key),\n    \"(app/utils...) injectSaga: Expected `key` to be a non empty string\"\n  );\n\nconst checkDescriptor = descriptor => {\n  const shape = {\n    saga: isFunction,\n    mode: mode => isString(mode) && allowedModes.includes(mode)\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    \"(app/utils...) injectSaga: Expected a valid saga descriptor\"\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga ||\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args)\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === \"production\") {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = \"done\"; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true)\n  };\n}\n","import React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { ReactReduxContext } from \"react-redux\";\n\nimport getInjectors from \"./sagaInjectors\";\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => WrappedComponent => {\n  class InjectSaga extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withSaga(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      \"Component\"})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.injectors = getInjectors(context.store);\n\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\n    }\n\n    componentWillUnmount() {\n      this.injectors.ejectSaga(key);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n\nconst useInjectSaga = ({ key, saga, mode }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    const injectors = getInjectors(context.store);\n    injectors.injectSaga(key, { saga, mode });\n\n    return () => {\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\nexport { useInjectSaga };\n","import React from \"react\";\n\nimport { Button, Table } from \"semantic-ui-react\";\n\nimport { useDispatch } from \"react-redux\";\nimport { initGetScenario } from \"../actions\";\nimport reducer from \"../reducer\";\nimport saga from \"../saga\";\nimport { useInjectReducer } from \"../../../HOC/useInjectReducer\";\nimport { useInjectSaga } from \"../../../HOC/injectSaga\";\n\nconst key = \"global\";\nconst ScenarioComponent = ({ scenario, token }) => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  const dispatch = useDispatch();\n\n  const onClickHandler = () => dispatch(initGetScenario({ scenario, token }));\n\n  return (\n    <Table.Row id={scenario?.displayScenarioName()}>\n      <Table.Cell>{scenario ? scenario?.displayScenarioName() : \"\"}</Table.Cell>\n      <Table.Cell>\n        {scenario ? scenario?.displayOpenerPosition() : \"\"}\n      </Table.Cell>\n      <Table.Cell>\n        {scenario ? scenario?.displayDefenderPosition() : \"\"}\n      </Table.Cell>\n      <Table.Cell>{scenario ? scenario?.displayDeadcards() : \"\"}</Table.Cell>\n      <Table.Cell>\n        {scenario.displayScenarioName().length ? (\n          <Button\n            color=\"green\"\n            onClick={onClickHandler}\n            className=\"load-button\"\n          >\n            Load\n          </Button>\n        ) : (\n          \"\"\n        )}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default ScenarioComponent;\n","import React from \"react\";\nimport { Tab, Table } from \"semantic-ui-react\";\nimport Scenario from \"./Scenario\";\nimport ScenarioComponent from \"../ScenarioLoader/scenarioComponent\";\n\nexport class Scenarios {\n  constructor(scenarioArray) {\n    this.scenarios = scenarioArray;\n    this.position = \"UTG\";\n  }\n\n  injectToken(token) {\n    this.token = token;\n    return this;\n  }\n\n  displayOpenerPosition() {\n    return this.position;\n  }\n\n  displayScenarioArrayLength(position) {\n    return (\n      Math.floor(\n        this.scenarios.filter(\n          (scenario, idx) => scenario.displayOpenerPosition() === position\n        ).length / 10\n      ) + 1\n    );\n  }\n\n  filteredScenarios({ activePage }) {\n    const availableScenarios = this.scenarios\n      .filter(\n        (scenario, idx) => scenario.displayOpenerPosition() === this.position\n      )\n      .filter((_, idx) => idx < activePage * 10 && idx >= activePage * 10 - 10);\n    const fill10ElementArray = [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"10\",\n    ].map(\n      (_, idx) =>\n        availableScenarios[idx] ||\n        new Scenario({\n          board: \"\",\n          DefenderPosition: \"\",\n          OpenerPosition: \"\",\n          ScenarioName: \"\",\n        })\n    );\n    return fill10ElementArray;\n  }\n  filteredScenariosArray() {\n    return [\"UTG\", \"MP\", \"CO\", \"BU\", \"SB\"].map(\n      (position) =>\n        this.scenarios.filter(\n          (scenario) => scenario.displayOpenerPosition() === position\n        ).length\n    );\n  }\n\n  filteredScenariosPosition() {\n    return this.scenarios.filter(\n      (scenario) => scenario.displayOpenerPosition() === this.position\n    ).length;\n  }\n}\n","import prange from \"prange\";\nclass RangeObject {\n  constructor(street, streetAction, cardSuitHandArray) {\n    this.street = street;\n    this.streetAction = streetAction;\n    this.cardSuitHandArray = cardSuitHandArray;\n  }\n\n  getFriendlyRangeOutput() {\n    const validRange = this.cardSuitHandArray.reduce((acc, curr) => {\n      if (curr.getHand().length > 3) return acc;\n      else return [...acc, curr.getHand()];\n    }, []);\n\n    let shortHandNotation = prange.reverse(validRange);\n\n    let extraCardsNotation = [],\n      newSuit;\n\n    this.cardSuitHandArray.forEach(SuitHand => {\n      if (SuitHand.getHand().length > 3) {\n        newSuit = SuitHand.getHand();\n        extraCardsNotation = [...extraCardsNotation, newSuit];\n      }\n    });\n\n    shortHandNotation =\n      shortHandNotation + \", \" + extraCardsNotation.join(\", \");\n\n    if (\n      shortHandNotation.trim().substr(shortHandNotation.length - 2, 1) === \",\"\n    )\n      return shortHandNotation.trim().substr(0, shortHandNotation.length - 2);\n    else return shortHandNotation.trim().substr(0, shortHandNotation.length);\n  }\n\n  getRangesObject() {\n    return {\n      Street: this.street,\n      BetType: this.streetAction,\n      hands: this.cardSuitHandArray.map(SuitHand => SuitHand.getHand())\n    };\n  }\n\n  displayInfo() {\n    let cardClone = {};\n\n    let idx;\n    switch (this.streetAction) {\n      case \"Raise4BetCall\":\n      case \"Valuebet\":\n        idx = 0;\n        break;\n      case \"Raise4BetFold\":\n      case \"Bluff\":\n        idx = 1;\n        break;\n      case \"RaiseCall\":\n      case \"CheckCall\":\n        idx = 2;\n        break;\n      case \"RaiseFold\":\n      case \"CheckFold\":\n        idx = 3;\n        break;\n      case \"SmallValuebet\":\n        idx = 4;\n        break;\n      case \"SmallBluff\":\n        idx = 5;\n        break;\n      default:\n        break;\n    }\n    this.cardSuitHandArray.forEach(CardSuitHand => {\n      if (CardSuitHand.getHand().length > 0)\n        Object.assign(cardClone, {\n          [CardSuitHand.getHand()]: {\n            colorCards: [\n              \"#0F6125\",\n              \"#ed87a7\",\n              \"#3ac0ff\",\n              \"#dc73ff\",\n              \"#003d3e\",\n              \"#8A4000\"\n            ][idx],\n            equity: \"n/a\"\n          }\n        });\n    });\n\n    return cardClone;\n  }\n\n  allHandsOneArray() {\n    return this.cardSuitHandArray.reduce((acc, curr) => {\n      return [...acc, curr];\n    }, []);\n  }\n\n  toCardHandRange() {\n    return this.cardSuitHandArray;\n  }\n  filterForHandsInRange(Street) {\n    if (this.street == Street) return this.cardSuitHandArray;\n    else return [];\n  }\n}\n\nexport default RangeObject;\n","const orderedCard = [ 'A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2' ];\n\nexport default class CardHandSuit {\n\tconstructor(cardOne, cardTwo, suit = '') {\n\t\tthis.cardOne = cardOne;\n\t\tthis.cardTwo = cardTwo;\n\t\tthis.suit = suit;\n\t\tthis.equity = 'n/a'; //FIXME: REMOVE\n\t}\n\n\tgetHand() {\n\t\tif (this.suit.length > 1) return this.cardOne + this.suit.substr(0, 1) + this.cardTwo + this.suit.substr(1, 1);\n\t\telse return this.cardOne + this.cardTwo + this.suit;\n\t}\n\n\tgetHandArray() {\n\t\treturn [ this.cardOne, this.cardTwo, this.suit ];\n\t}\n\n\tisInRange(rangeObj) {\n\t\tlet filteredRangeObj = [];\n\n\t\tif (rangeObj === [] || rangeObj === [ [], [], [], [] ]) return false;\n\n\t\tfilteredRangeObj = rangeObj.filter((cardHandSuitObj) => {\n\t\t\tlet numObjects = (cardHandSuit) =>\n\t\t\t\tcardHandSuit.filter((hand) => hand.getHand() == this.cardOne + this.cardTwo + this.suit);\n\t\t\treturn numObjects(cardHandSuitObj).length > 0;\n\t\t});\n\n\t\treturn filteredRangeObj.length > 0;\n\t}\n\n\tisSuit(suit) {\n\t\treturn this.suit === suit;\n\t}\n\n\tindexsOf(arrayOfCardHandSuit) {\n\t\tlet Index = -1;\n\t\tarrayOfCardHandSuit.forEach((cardHandSuits, idx) => {\n\t\t\tif (this.isInRange([ cardHandSuits ])) Index = idx;\n\t\t});\n\n\t\treturn Index;\n\t}\n}\n","import CardHandSuit from './CardHandSuit';\n\nconst orderedCard = [ 'A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2' ];\n\nexport class CardHandSuitBuilder {\n\tbuild(cardOnePar, cardTwoPar, suitPar = '') {\n\t\tlet suit, createdSuitHand;\n\t\tsuit = this.assignSuit(suitPar, cardOnePar, cardTwoPar);\n\n\t\t// cardOne = Ac cardTwo = Td\n\t\tif (cardOnePar.length === 2) {\n\t\t\tcreatedSuitHand = this.buildWithCardOneTwoAndNoSuit(cardOnePar, cardTwoPar);\n\t\t}\n\t\t// cardOne = K, cardTwo = 9, suit= cd\n\t\tif (suitPar.length === 2 && cardOnePar.length === 1) {\n\t\t\tcreatedSuitHand = this.buildWithCardOneAndSuitCardTwoAndSuit(cardOnePar, cardTwoPar, suitPar);\n\t\t}\n\t\t// cardOne = T, cradTwo = J\n\t\tif (suitPar.length === 0 && cardOnePar.length === 1) {\n\t\t\tcreatedSuitHand = this.buildWithCardOneCardTwoAndSpecificHand(cardOnePar, cardTwoPar);\n\t\t}\n\n\t\t// cardOne = T, cardTwo = J, suit = s\n\t\tif ((suitPar.length === 1) & (cardOnePar.length === 1)) {\n\t\t\tconst cardOrder = this._getCards(cardOnePar, cardTwoPar);\n\t\t\tcreatedSuitHand = new CardHandSuit(cardOrder[0], cardOrder[1], suitPar);\n\t\t}\n\n\t\treturn createdSuitHand;\n\t}\n\n\tassignSuit(suitPar, cardOnePar, cardTwoPar) {\n\t\tlet suit;\n\t\tif (suitPar.length === 1) suit = suitPar;\n\t\tif (suitPar.length < 1) suit = this._displayCardSuit(cardOnePar, cardTwoPar);\n\t\tif (suitPar === 0) suit = '';\n\t\treturn suit;\n\t}\n\n\tbuildWithCardOneCardTwoAndSpecificHand(cardOnePar, cardTwoPar) {\n\t\tconst cardOne = this._getCards(cardOnePar, cardTwoPar)[0];\n\t\tconst cardTwo = this._getCards(cardOnePar, cardTwoPar)[1];\n\t\tconst suit = this._displayCardSuit(cardOnePar, cardTwoPar);\n\t\treturn new CardHandSuit(cardOne, cardTwo, suit);\n\t}\n\n\tbuildWithCardOneAndSuitCardTwoAndSuit(cardOnePar, cardTwoPar, suitPar) {\n\t\tconst optionalCardSuitOne = suitPar.length > 1 ? suitPar.substring(0, 1) : '';\n\t\tconst optionalCardSuitTwo = suitPar.length > 1 ? suitPar.substring(1, 2) : '';\n\t\tconst suit = optionalCardSuitOne + optionalCardSuitTwo;\n\t\tconst cardOne = cardOnePar;\n\t\tconst cardTwo = cardTwoPar;\n\t\treturn new CardHandSuit(cardOne, cardTwo, suit);\n\t}\n\tbuildWithCardOneTwoAndNoSuit(cardOne, cardTwo) {\n\t\tconst combinedSingleHandSuit = cardOne.substr(1, 1) + cardTwo.substr(1, 1);\n\t\tconst cardOneRank = cardOne.substr(0, 1);\n\t\tconst cardTwoRank = cardTwo.substr(0, 1);\n\t\treturn new CardHandSuit(cardOneRank, cardTwoRank, combinedSingleHandSuit);\n\t}\n\t//TODO: Make public method of CardHandSuit\n\t_getCards(cardOne, cardTwo) {\n\t\tlet card1 = '',\n\t\t\tcard2 = '';\n\t\tif (orderedCard.indexOf(cardOne) < orderedCard.indexOf(cardTwo)) {\n\t\t\tcard1 = cardOne;\n\t\t\tcard2 = cardTwo;\n\t\t} else if (cardOne === cardTwo) {\n\t\t\tcard1 = cardOne;\n\t\t\tcard2 = cardTwo;\n\t\t} else {\n\t\t\tcard1 = cardTwo;\n\t\t\tcard2 = cardOne;\n\t\t}\n\t\treturn [ card1, card2 ];\n\t}\n\t//TODO: Make public method of CardHandSuit\n\t_displayCardSuit(cardOne, cardTwo) {\n\t\tlet displaySuit = '';\n\t\tif (orderedCard.indexOf(cardOne) < orderedCard.indexOf(cardTwo)) {\n\t\t\tdisplaySuit = 's';\n\t\t} else if (orderedCard.indexOf(cardOne) === orderedCard.indexOf(cardTwo)) {\n\t\t\tdisplaySuit = '';\n\t\t} else {\n\t\t\tdisplaySuit = 'o';\n\t\t}\n\t\treturn displaySuit;\n\t}\n}\n","import { initialState } from '../reducer';\nimport { CardHandSuitBuilder } from './CardHandSuitBuilder';\nimport RangeObject from './RangeObject';\n\nexport class RangeObjectCollection {\n\tconstructor(rangeArray) {\n\t\tconst newRange = rangeArray || initialState.ranges;\n\t\tthis.rangeObjectCollection = this._copyRangeObject(newRange);\n\t}\n\t_copyRangeObject(range) {\n\t\treturn range.map(({ Street, BetType, hands }) => new RangeObject(Street, BetType, this._copyHands(hands)));\n\t}\n\t_copyHands(hands) {\n\t\treturn hands.map((hand) =>\n\t\t\tnew CardHandSuitBuilder().build(\n\t\t\t\thand.length <= 3 ? hand.substr(0, 1) : hand.substr(0, 2),\n\t\t\t\thand.length <= 3 ? hand.substr(1, 1) : hand.substr(2, 2),\n\t\t\t\thand.length <= 3 ? hand.substr(2, hand.length - 1) : ''\n\t\t\t)\n\t\t);\n\t}\n\n\tdisplayPreviousRange({ Street = 'Flop', isIP = true }) {\n\t\treturn this.rangeObjectCollection.filter(({ street, streetAction }) =>\n\t\t\tthis.filterRange({ isIP, street, streetAction, Street })\n\t\t);\n\t}\n\tfilterRange({ isIP, street, streetAction, Street }) {\n\t\tconst possiblePreviousStreet = [ 'Preflop', 'Flop', 'Turn', 'River' ];\n\t\tconst previousStreetIdx = possiblePreviousStreet.reduce(\n\t\t\t(acc, currStreet, idx) => (currStreet === Street ? acc + idx - 1 : acc),\n\t\t\t0\n\t\t);\n\t\tconst allowedActionsWhitelist = isIP ? [ 'Valuebet', 'Bluff', 'SmallValuebet', 'SmallBluff' ] : [ 'CheckCall' ];\n\t\tallowedActionsWhitelist.push('Raise4BetCall', 'Raise4BetFold', 'RaiseCall', 'RaiseFold');\n\t\treturn street === possiblePreviousStreet[previousStreetIdx] && allowedActionsWhitelist.includes(streetAction);\n\t}\n\tdisplayRangeByStreet({ Street = 'Preflop', useTwoFlopSizes = false }) {\n\t\tconst blackList = useTwoFlopSizes ? [] : [ 'SmallValuebet', 'SmallBluff' ];\n\t\treturn this.rangeObjectCollection.filter(\n\t\t\t({ street, streetAction }) => Street == street && !blackList.includes(streetAction)\n\t\t);\n\t}\n\tdisplayRange() {\n\t\treturn this.rangeObjectCollection;\n\t}\n}\n","/**\n * The home state selectors\n */\n\nimport { createSelector } from \"reselect\";\n\nimport { initialState } from \"./reducer\";\nimport Scenario from \"./EngineClasses/Scenario\";\nimport { Scenarios } from \"./EngineClasses/Scenarios\";\nimport RangeObject from \"./EngineClasses/RangeObject\";\nimport { CardHandSuitBuilder } from \"./EngineClasses/CardHandSuitBuilder\";\nimport { RangeObjectCollection } from \"./EngineClasses/RangeObjectCollection\";\n\nconst selectGlobal = (state) => state.global || initialState; //??\nconst selectRouter = (state) => state.router;\n\nconst selectUser = (state) => state.user;\n\nconst makeSelectMode = () =>\n  createSelector(selectGlobal, (globalState) => globalState.mode);\n\nconst makeSelectRangeRepoIP = () =>\n  createSelector(selectGlobal, (globalState) =>\n    new RangeObjectCollection(globalState.rangeRepoIP).displayRange()\n  );\n\nconst makeSelectRangeRepoOOP = () =>\n  createSelector(selectGlobal, (globalState) =>\n    new RangeObjectCollection(globalState.rangeRepoOOP).displayRange()\n  );\nconst makeSelectSelectedStreetBetType = () => {\n  return createSelector(selectGlobal, (global) =>\n    new RangeObjectCollection(global.ranges).displayRangeByStreet({\n      street: global?.mode?.street,\n    })\n  );\n};\n\nconst makeSelectSelectedStreet = () =>\n  createSelector(selectGlobal, (global) =>\n    new RangeObjectCollection(global?.ranges).displayRangeByStreet({\n      Street: global?.mode?.street,\n      useTwoFlopSizes: global?.mode?.useTwoFlopSizes,\n    })\n  );\n\nconst makeSelectRangesPreviousStreet = () =>\n  createSelector(selectGlobal, (global) =>\n    new RangeObjectCollection(global.ranges).displayPreviousRange({\n      Street: global?.mode?.street,\n      isIP: global?.mode?.isIP,\n    })\n  );\n\n//FIXME: Needs a rename because its all ranges\nconst makeSelectRangesPreflop = () =>\n  createSelector(selectGlobal, (global) =>\n    new RangeObjectCollection(global.ranges).displayRangeByStreet({\n      Street: \"Preflop\",\n    })\n  );\n\nconst makeSelectRange = () =>\n  createSelector(selectGlobal, (globalState) =>\n    new RangeObjectCollection(globalState.ranges).displayRange()\n  );\n\nconst makeSelectUser = () =>\n  createSelector(selectUser, (userState) => userState);\n\nconst makeSelectDeadcards = () =>\n  createSelector(selectGlobal, (globalState) => globalState.deadcards);\n\nconst makeSelectPosition = () =>\n  createSelector(selectGlobal, (globalState) => globalState.mode.isIP);\n\nconst makeSelectOtherRange = () => {\n  return createSelector(selectGlobal, (globalState) => {\n    let rangeRepoPreflop;\n    if (globalState.mode.isIP)\n      rangeRepoPreflop = new RangeObjectCollection(\n        globalState.rangeRepoIP\n      ).displayRange();\n    else\n      rangeRepoPreflop = new RangeObjectCollection(\n        globalState.rangeRepoOOP\n      ).displayRange();\n    return rangeRepoPreflop;\n  });\n};\n\nconst makeSelectLoadEquities = () =>\n  createSelector(selectGlobal, (globalState) => globalState.loadEquities);\n\nconst makeSelectHandEquities = () =>\n  createSelector(selectGlobal, (globalState) => globalState.handEquities);\n\nconst makeSelectScenariosClass = () =>\n  createSelector(\n    selectGlobal,\n    (globalState) =>\n      new Scenarios(\n        globalState.scenarioBoards.map(\n          ([board, ScenarioName, OpenerPosition, DefenderPosition]) =>\n            new Scenario({\n              board,\n              OpenerPosition,\n              DefenderPosition,\n              ScenarioName,\n            })\n        )\n      )\n  );\n\nexport {\n  selectGlobal,\n  selectRouter,\n  makeSelectRangeRepoIP,\n  makeSelectRangeRepoOOP,\n  makeSelectSelectedStreetBetType,\n  makeSelectSelectedStreet,\n  makeSelectRangesPreviousStreet,\n  makeSelectRangesPreflop,\n  makeSelectRange,\n  makeSelectMode,\n  makeSelectUser,\n  makeSelectDeadcards,\n  makeSelectPosition,\n  makeSelectLoadEquities,\n  makeSelectOtherRange,\n  makeSelectHandEquities,\n  makeSelectScenariosClass,\n};\n","import styled from \"styled-components\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Grid, Button, Table } from \"semantic-ui-react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport const ColorCard = styled(animated.button)`\n  border: none;\n  width: 100% !important;\n  border-color: rgba(0, 0, 0, 1);\n  background-color: rgba(0, 0, 0, 0);\n  font-size: 8px;\n  padding: 0px;\n\n  @media (min-width: 576px) {\n    font-size: 12px;\n  }\n`;\n\nexport const StyledRow = styled(Table.Row)`\n  margin: 0px;\n  flex-wrap: nowrap !important;\n`;\n\nexport const StyledCol = styled(Table.Cell)`\n  padding: 0px !important;\n  margin: 0px;\n  color: ${props => (props.suitString.length > 2 ? \"white\" : \"black\")};\n  background-image: ${props =>\n    props.suitString.length > 9\n      ? \" linear-gradient(to right, \" + props.suitString + \")\"\n      : \"none\"};\n  background-color: ${props =>\n    props.suitString.length <= 9\n      ? props.suitString + \" !important\"\n      : \"none !important\"};\n\n  border: ${props =>\n    props.border_attrib == \"true\"\n      ? \"2px dashed black !important\"\n      : \"2px solid #FFF !important\"};\n`;\nexport const orderedCard = [\n  \"A\",\n  \"K\",\n  \"Q\",\n  \"J\",\n  \"T\",\n  \"9\",\n  \"8\",\n  \"7\",\n  \"6\",\n  \"5\",\n  \"4\",\n  \"3\",\n  \"2\"\n];\n","export const findInArray = (cards, cardHand) =>\n  Object.keys(cards).filter(\n    (card) =>\n      equalPairs(card, cardHand) ||\n      cardHand.getHand().substr(0, 3) === card.substr(0, 3) ||\n      equalSuitedHands(card, cardHand) ||\n      equalOffsuitedHands(card, cardHand) ||\n      equalPairsSpecificCombos(card, cardHand)\n  );\n\nconst equalPairs = (card, cardHand) =>\n  cardHand.getHand().substr(0, 2) === card.substr(0, 2) &&\n  card.length === 2 &&\n  cardHand.getHand().length === 2;\n\nexport const equalSuitedHands = (card, cardHand) =>\n  card.length > 3 &&\n  cardHand.getHand().substr(0, 1) === card.substr(0, 1) &&\n  cardHand.getHand().substr(1, 1) === card.substr(2, 1) &&\n  cardHand.getHand().substr(2, 1) === \"s\" &&\n  card.substr(1, 1) === card.substr(3, 1);\n\nexport const equalOffsuitedHands = (card, cardHand) =>\n  card.length > 3 &&\n  cardHand.getHand().substr(0, 1) === card.substr(0, 1) &&\n  cardHand.getHand().substr(1, 1) === card.substr(2, 1) &&\n  cardHand.getHand().substr(2, 1) === \"o\" &&\n  card.substr(1, 1) !== card.substr(3, 1);\n\nexport const equalPairsSpecificCombos = (card, cardHand) =>\n  cardHand.getHand().length === 2 &&\n  cardHand.getHand().substring(0, 1) === card.substring(0, 1) &&\n  card.substring(0, 1) === card.substring(2, 3) &&\n  card.substring(1, 2) !== card.substring(3, 4);\n","import {\n  equalSuitedHands,\n  equalOffsuitedHands,\n  equalPairsSpecificCombos,\n  findInArray,\n} from \"./findInArray\";\n\nexport const colorCell = (cards, cardHand) => {\n  if (!Object.keys(cards).length) return [\"#DDD\"];\n\n  const selectedHandsArr = findInArray(cards, cardHand);\n\n  if (selectedHandsArr[0]?.length <= 3)\n    return colorLengthThreeHand({ selectedHandsArr, cards });\n\n  const fourElementArray = [\"ss\", \"dd\", \"hh\", \"cc\"];\n  const sixteenElementArray = [\n    \"sd\",\n    \"sh\",\n    \"sc\",\n    \"cs\",\n    \"cd\",\n    \"ch\",\n    \"hs\",\n    \"hd\",\n    \"hc\",\n    \"ds\",\n    \"dh\",\n    \"dc\",\n  ];\n  const sixElementArray = [\"sd\", \"sh\", \"sc\", \"cs\", \"cd\", \"dh\"];\n\n  const isCheckHandArr = (selectedHandsArr, equalHandFn) =>\n    selectedHandsArr.filter((card) => equalHandFn(card, cardHand));\n  const checkHandSuited = isCheckHandArr(selectedHandsArr, equalSuitedHands);\n  const checkHandOffsuited = isCheckHandArr(\n    selectedHandsArr,\n    equalOffsuitedHands\n  );\n  const checkHandPaired = isCheckHandArr(\n    selectedHandsArr,\n    equalPairsSpecificCombos\n  );\n\n  return (\n    checkAndReturnColorHandArray(fourElementArray, checkHandSuited, cards) ||\n    checkAndReturnColorHandArray(\n      sixteenElementArray,\n      checkHandOffsuited,\n      cards\n    ) ||\n    checkAndReturnColorHandArray(sixElementArray, checkHandPaired, cards) || [\n      \"#DDD\",\n    ]\n  );\n};\n\nconst colorLengthThreeHand = ({ selectedHandsArr, cards }) => {\n  return selectedHandsArr.map((copy) => cards[copy].colorCards) || [\"#DDD\"];\n};\n\nconst checkAndReturnColorHandArray = (elementArray, isCheckHandArr, cards) => {\n  if (isCheckHandArr.length) {\n    const elementArraySpecific = specificHandArray(\n      elementArray,\n      isCheckHandArr\n    ); //?\n    return colorHandArray(elementArraySpecific, cards);\n  }\n  return false;\n};\n\nconst colorHandArray = (elementArray, cards) =>\n  elementArray.map((copy) => cards[copy]?.colorCards || \"#DDD\");\n\nconst specificHandArray = (elementArray, isCheck) =>\n  elementArray.map((_, idx) => isCheck[idx] || \"\");\n","import React, { useState, useEffect } from \"react\";\nimport { StyledCol, ColorCard } from \"./Styles.js\";\nimport { findInArray } from \"../EngineClasses/findInArray\";\nimport { colorCell } from \"../EngineClasses/colorCellFn\";\n\nconst TableGridColumn = ({ cardHand, bind, allPreflopHands, cards }) => {\n  const [suitString, updateSuitString] = useState();\n  useEffect(() => {\n    const newColors = colorCell(cards, cardHand);\n    if (findInArray(cards, cardHand).length > 0) {\n      let newCSSGradient = newColors.reduce(\n        (acc, color) => acc + color + \" , \",\n        \"\"\n      );\n      newCSSGradient = newCSSGradient.substr(0, newCSSGradient.length - 3);\n      updateSuitString(newCSSGradient);\n    } else {\n      updateSuitString(\"#DDD\");\n    }\n  }, [cardHand, cards]);\n  return (\n    <StyledCol\n      key={cardHand}\n      id={\"colorColumnButton\" + cardHand.getHand()}\n      border_attrib={\"\" + cardHand.isInRange(allPreflopHands)}\n      suitString={suitString || \"\"}\n    >\n      <ColorCard\n        key={\"colorcard\" + cardHand.getHand()}\n        id={\"colorButton\" + cardHand.getHand()}\n        {...bind(cardHand.getHand())}\n        hand={cardHand.getHand()}\n      >\n        {cardHand.getHand()}\n      </ColorCard>\n    </StyledCol>\n  );\n};\n\nexport default TableGridColumn;\n","import React from 'react';\nimport { StyledCol, ColorCard, StyledRow } from '../Board/Styles.js';\n\nimport { CardHandSuitBuilder } from './CardHandSuitBuilder';\nimport TableGridColumn from '../Board/TableGridColumn';\nimport RangeObject from './RangeObject';\n\nimport { initialState } from '../reducer.js';\nimport { Table } from 'semantic-ui-react';\n\nexport default class BoardOfHands {\n\tconstructor(bind) {\n\t\tthis.orderedCard = [ 'A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2' ];\n\t\tthis.hands = this.generateCardGrid();\n\t\tthis.PreflopRangesOnly = initialState.ranges\n\t\t\t.filter(({ Street, BetType }) => {\n\t\t\t\tif (Street === 'Flop') return Street === 'Preflop';\n\t\t\t\tif (Street === 'Turn') return Street === 'Flop' && (BetType === 'Valuebet' || BetType === 'Bluff');\n\t\t\t\tif (Street === 'River') return Street === 'Turn' && (BetType === 'Valuebet' || BetType === 'Bluff');\n\t\t\t})\n\t\t\t.map(({ Street, BetType, hands }) => new RangeObject(Street, BetType, hands));\n\t\tthis.bind = bind;\n\t}\n\n\tgenerateCardGrid() {\n\t\tlet cardGrid = this.orderedCard.map((cardOne) =>\n\t\t\tthis.orderedCard.map((cardTwo) => new CardHandSuitBuilder().build(cardOne, cardTwo))\n\t\t);\n\t\treturn cardGrid;\n\t}\n\n\tupdateCardGrid(PreflopRanges, RangesSelected) {\n\t\tlet cardClone;\n\n\t\tcardClone = RangesSelected.reduce((acc, RangeObject) => {\n\t\t\tif (RangeObject.displayInfo() === {}) return acc;\n\t\t\telse return { ...acc, ...RangeObject.displayInfo() };\n\t\t}, {});\n\n\t\tthis.PreflopRangesOnly = PreflopRanges;\n\t\tthis.cards = cardClone;\n\t}\n\n\tview() {\n\t\tlet allPreflopHands = this.PreflopRangesOnly.map((rangeObject) => rangeObject.allHandsOneArray());\n\n\t\tlet setNewManyHands = this.hands.map((row, idx) => {\n\t\t\tlet columnJSX = row.map((cardHand) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableGridColumn\n\t\t\t\t\t\tcardHand={cardHand}\n\t\t\t\t\t\tbind={this.bind}\n\t\t\t\t\t\tallPreflopHands={allPreflopHands}\n\t\t\t\t\t\tcards={this.cards}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn <StyledRow>{columnJSX}</StyledRow>;\n\t\t});\n\t\treturn <Table.Body id=\"cardgridtable\">{setNewManyHands}</Table.Body>;\n\t}\n}\n\nexport const orderedCard = [ 'A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2' ];\n\nexport const generateCardGrid = (PreflopRanges, Position) => {\n\tlet cardClone = {};\n\n\tPreflopRanges.forEach(({ hands }, idx) => {\n\t\thands.forEach((hand) => {\n\t\t\tcardClone = {\n\t\t\t\t...cardClone,\n\t\t\t\t[hand.getHand()]: {\n\t\t\t\t\tcolorCards: [ '#0F6125', '#ed87a7', '#3ac0ff', '#dc73ff', '#003d3e', '#8A4000' ][idx],\n\t\t\t\t\tequity: 'n/a'\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t});\n\n\treturn cardClone;\n};\n","import React, { useState, useEffect, memo, Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Table } from \"semantic-ui-react\";\nimport { useGesture } from \"react-use-gesture\";\n\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {\n  makeSelectSelectedStreet,\n  makeSelectLoadEquities,\n  makeSelectDeadcards,\n  makeSelectOtherRange,\n  makeSelectHandEquities,\n  makeSelectMode,\n  makeSelectRange,\n  makeSelectRangesPreviousStreet,\n} from \"../selectors\";\n\nimport BoardOfHands from \"../EngineClasses/StateUpdate\";\n\nconst isOnMouseDownEventPushed = ({ props }) =>\n  (props.memo !== props.args[props.args.length - 1] && props.down) ||\n  (props.first && props.down);\n\nconst Board = ({ onMouseOverHandler, SelectedRanges, preflopRanges }) => {\n  const [manyHands, setManyHands] = useState();\n  const [instanceOfBoardHands, updateInstanceOfBoardHands] = useState(false);\n\n  // Set the drag hook and define component movement based on gesture data\n  const bind = useGesture({\n    onDrag: (props) =>\n      onMouseOverHandler(\n        {\n          cards: props.args[props.args.length - 1],\n          onMouseDownEvent: isOnMouseDownEventPushed({ props }),\n        },\n        { threshold: 40, filterTaps: false }\n      ),\n    onMove: (props) =>\n      onMouseOverHandler(\n        {\n          cards: props.args[props.args.length - 1],\n          onMouseDownEvent:\n            (props.memo !== props.args[0] && props.down) ||\n            (props.first && props.down),\n        },\n        { threshold: 40, delay: true }\n      ),\n  });\n\n  useEffect(() => {\n    if (!instanceOfBoardHands)\n      updateInstanceOfBoardHands(new BoardOfHands(bind));\n\n    //If there are new equities to be entered, dispatch the action\n  }, [false, bind]);\n\n  useEffect(() => {\n    if (instanceOfBoardHands) {\n      instanceOfBoardHands.updateCardGrid(preflopRanges, SelectedRanges);\n\n      setManyHands(instanceOfBoardHands.view());\n    }\n    //If there are new equities to be entered, dispatch the action\n  }, [instanceOfBoardHands, SelectedRanges, preflopRanges, bind]);\n\n  return (\n    <Table celled striped unstackable>\n      {manyHands}\n    </Table>\n  ); //TO-DO: BUG this generates console error\n};\n\nconst mapStateToProps = () => {\n  const getRangesSelected = makeSelectSelectedStreet();\n  const getLoadEquities = makeSelectLoadEquities();\n  const getCards = makeSelectDeadcards();\n  const getOtherRange = makeSelectOtherRange();\n  const getHandEquities = makeSelectHandEquities();\n  const getMode = makeSelectMode();\n  const getRanges = makeSelectRange();\n  const getRangesPreflop = makeSelectRangesPreviousStreet();\n\n  const mapState = (state) => {\n    return {\n      SelectedRanges: getRangesSelected(state),\n      ranges: getRanges(state),\n      loadEquities: getLoadEquities(state),\n      handEquities: getHandEquities(state),\n      deadcards: getCards(state),\n      otherRange: getOtherRange(state),\n      mode: getMode(state),\n      preflopRanges: getRangesPreflop(state),\n    };\n  };\n\n  return mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(Board);\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst StyledColorRow = styled(Table.Cell)`\n  color: white;\n  background-color: ${(props) =>\n    [\"#0f6125\", \"#a30b00\", \"#005e8a\", \"#8e00bd\", \"#003d3e\", \"#713400\"][\n      props.index\n    ]};\n`;\nconst GeneratedLegendTable = ({ streetActions, numberOfCombos, index }) => {\n  return (\n    <Table.Row>\n      <StyledColorRow index={index}>\n        <strong>{streetActions[index]}</strong>\n      </StyledColorRow>\n      <Table.Cell>{numberOfCombos[index]}</Table.Cell>\n      <Table.Cell id=\"Raise4BetValueTutorial\">\n        {numberOfCombos.reduce((acc, curr) => acc + curr, 0) !== 0\n          ? (\n              (100 * numberOfCombos[index]) /\n              numberOfCombos.reduce((acc, curr) => acc + curr, 0)\n            ).toFixed(2)\n          : \"0\"}\n      </Table.Cell>\n      <Table.Cell>\n        {((numberOfCombos[index] / 1326) * 100).toFixed(2)}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default GeneratedLegendTable;\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport GeneratedLegendTable from \"./GeneratedLegendTable\";\n\nconst StyledInvertedRow = styled(Table.Row)`\n  color: white;\n  background-color: black;\n`;\n\nconst LegendTable = ({\n  numberOfCombos,\n  indexOfActions = [0, 1, 2, 3],\n  streetActions,\n}) => (\n  <Table unstackable fixed>\n    <Table.Body>\n      <StyledInvertedRow>\n        <Table.HeaderCell>Name</Table.HeaderCell>\n        <Table.HeaderCell>Range # Combos</Table.HeaderCell>\n        <Table.HeaderCell>% of Range</Table.HeaderCell>\n        <Table.HeaderCell>% of Hands</Table.HeaderCell>\n      </StyledInvertedRow>\n      {indexOfActions.map((index) => (\n        <GeneratedLegendTable\n          streetActions={streetActions}\n          numberOfCombos={numberOfCombos}\n          index={index}\n        />\n      ))}\n    </Table.Body>\n  </Table>\n);\n\nexport default LegendTable;\n","import _ from \"lodash\";\nimport { CardHandSuitBuilder } from \"./CardHandSuitBuilder\";\n\nexport const countHandCombo = (wholeRange, chosenStreet, board) => {\n  let wholeRangeNum = wholeRange.map((rangeObject) =>\n    rangeObject.allHandsOneArray().reduce((acc, hand) => {\n      return acc + comboCounter(hand.getHand(), chosenStreet, board);\n    }, 0)\n  );\n\n  return wholeRangeNum;\n};\n\nconst comboCounter = (hands, chosenStreet, board) => {\n  if (!hands) return 0;\n\n  let hand;\n\n  if (hands.length === 2)\n    hand = new CardHandSuitBuilder().build(\n      hands.substr(0, 1),\n      hands.substr(1, 1)\n    );\n  if (hands.length === 3)\n    hand = new CardHandSuitBuilder().build(\n      hands.substr(0, 1),\n      hands.substr(1, 1),\n      hands ? hands.substr(2, 1) : \"\"\n    );\n  else if (hands.length === 4)\n    hand = new CardHandSuitBuilder().build(\n      hands.substr(0, 2),\n      hands.substr(2, 2),\n      \"\"\n    ); //FIXME: UGLY\n  if (hands.length > 3) {\n    let transformedCardHand = [\n      hand.getHand().substr(0, 2),\n      hand.getHand().substr(2, 2),\n    ];\n    if (\n      board.includes(transformedCardHand[0]) ||\n      board.includes(transformedCardHand[1])\n    )\n      return 0;\n    return 1;\n  }\n  //Suited Combos\n\n  if (hands.includes(\"s\")) return suitedComboCounter(hand, board, \"s\");\n  else if (hands.includes(\"o\"))\n    //Offsuit Combos\n    return offsuitComboCounter(hand, board, \"o\");\n  //Pair Combos\n  else return pairComboCounter(hand, board);\n};\nconst offsuitComboCounter = (hand, board) => {\n  const numOccurances = _.countBy(_.split(board, \"\"));\n  const subtractFirstCard = numOccurances[hand.getHand().charAt(0)] || 0;\n  const subtractSecondCard = numOccurances[hand.getHand().charAt(1)] || 0;\n  const numCards = (4 - subtractFirstCard) * (4 - subtractSecondCard);\n  return numCards;\n};\n\nconst suitedComboCounter = (hand, board) => {\n  const numHandCardsInBoard = board.filter(\n    (boardCard) =>\n      boardCard.includes(hand.getHandArray()[0]) ||\n      boardCard.includes(hand.getHandArray()[1])\n  );\n  if (numHandCardsInBoard.length === 2) {\n    const suitOfMatchedCards = numHandCardsInBoard.map((boardCard) =>\n      boardCard.substr(1, 1)\n    );\n    const suitsDoMatch = suitOfMatchedCards[0] === suitOfMatchedCards[1];\n    return suitsDoMatch ? 3 : 2;\n  }\n  return 4 - numHandCardsInBoard.length;\n};\n\nconst pairComboCounter = (hand, board) => {\n  //Pair Combos\n  let numOccurances = _.countBy(_.split(board, \"\", 12));\n  let subtractFirstCard = numOccurances[hand.getHand().charAt(0)] || 0;\n  let subtractSecondCard = numOccurances[hand.getHand().charAt(1)] || 0;\n\n  let numCards = ((4 - subtractFirstCard) * (3 - subtractSecondCard)) / 2;\n  return numCards;\n};\n","import React, { Fragment, useState, useEffect, memo } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { Header, Table, Tab, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {\n  makeSelectDeadcards,\n  makeSelectMode,\n  makeSelectSelectedStreet,\n} from \"../selectors\";\n\nimport LegendTable from \"./LegendTable\";\nimport { CardHandSuitBuilder } from \"../EngineClasses/CardHandSuitBuilder\";\nimport { countHandCombo } from \"../EngineClasses/countHandCombo\";\n\nconst StyledContainer = styled(Container)`\n  font-size: 1rem;\n`;\n\n//TODO: Make a board legend for Preflop/Flop/Turn/River\n\nconst BoardLegend = ({\n  wholeRange,\n  mode: { street, useTwoFlopSizes },\n  deadcards,\n}) => {\n  const streetActions = {\n    Preflop: [\n      \"Raise 4 Bet Call\",\n      \"Raise 4 Bet Fold\",\n      \"Raise Call\",\n      \"Raise Fold\",\n    ],\n    Flop: [\n      \"Valuebet\",\n      \"Bluff\",\n      \"CheckCall\",\n      \"CheckFold\",\n      \"SmallValuebet\",\n      \"SmallBluff\",\n    ],\n    Turn: [\"Valuebet\", \"Bluff\", \"CheckCall\", \"CheckFold\"],\n    River: [\"Valuebet\", \"Bluff\", \"CheckCall\", \"CheckFold\"],\n  };\n  const [indexOfActions, updateIndexOfActions] = useState([0, 1, 2, 3]);\n  const [numberOfCombos, updateNumberOfCombos] = useState([0, 0, 0, 0]);\n\n  useEffect(() => {\n    if (useTwoFlopSizes && street === \"Flop\")\n      updateIndexOfActions([0, 1, 2, 3, 4, 5]);\n    else updateIndexOfActions([0, 1, 2, 3]);\n  }, [useTwoFlopSizes, street]);\n\n  useEffect(() => {\n    updateNumberOfCombos(countHandCombo(wholeRange, street, deadcards));\n  }, [wholeRange, street, deadcards]);\n\n  return (\n    <StyledContainer>\n      <LegendTable\n        numberOfCombos={numberOfCombos}\n        indexOfActions={indexOfActions}\n        streetActions={streetActions[street]}\n      />\n    </StyledContainer>\n  );\n};\n\nconst mapStateToProps = () => {\n  const getDeadcards = makeSelectDeadcards();\n  const getMode = makeSelectMode();\n  const getSelectedRange = makeSelectSelectedStreet();\n\n  const mapState = (state) => {\n    return {\n      deadcards: getDeadcards(state),\n      mode: getMode(state),\n      wholeRange: getSelectedRange(state),\n    };\n  };\n  return mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\nexport default compose(withConnect, memo)(BoardLegend);\n","import React from \"react\";\nimport { Button, Segment } from \"semantic-ui-react\";\n\nconst InputStreet = ({ onHandleStreetHandler, street }) => {\n  return (\n    <Segment.Group\n      size=\"tiny\"\n      horizontal\n      style={{ height: \"40px\", fontSize: \"12px !important\" }}\n    >\n      <Segment\n        id=\"streetFirstChoice\"\n        name=\"Preflop\"\n        value=\"Raise4BetCall\"\n        inverted={street == \"Preflop\"}\n        color=\"blue\"\n      >\n        Preflop\n      </Segment>\n      <Segment\n        id=\"streetSecondChoice\"\n        name=\"Flop\"\n        value=\"Valuebet\"\n        inverted={street == \"Flop\"}\n        color=\"blue\"\n      >\n        Flop\n      </Segment>\n      <Segment\n        id=\"streetThirdChoice\"\n        name=\"Turn\"\n        value=\"Valuebet\"\n        inverted={street == \"Turn\"}\n        color=\"blue\"\n      >\n        Turn\n      </Segment>\n      <Segment\n        id=\"streetFourthChoice\"\n        name=\"River\"\n        value=\"Valuebet\"\n        inverted={street == \"River\"}\n        color=\"blue\"\n      >\n        River\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default InputStreet;\n","import React, { Fragment, useState, memo } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Grid, Segment, Form, Button, Progress, Label, Step, Icon, Dropdown } from 'semantic-ui-react';\nimport { initSetDeadCards, setIsIP, loadEquities } from '../actions';\nimport { compose } from 'redux';\nimport { connect, useDispatch } from 'react-redux';\nimport _ from 'lodash';\n\nimport { initSaveScenario, initGetAllScenario } from '../actions';\nimport {\n\tmakeSelectRangeRepoIP,\n\tmakeSelectRangeRepoOOP,\n\tmakeSelectRange,\n\tmakeSelectPosition,\n\tmakeSelectMode,\n\tmakeSelectDeadcards\n} from '../selectors';\nimport InputStreet from './InputStreet';\n\nconst DeadCards = styled(Form.Input)`\n  width: 100%;\n`;\n\nconst addSuits = (rank) =>\n\t[ 'c', 's', 'h', 'd' ].map((suited) => {\n\t\treturn {\n\t\t\tkey: rank + suited,\n\t\t\ttext: rank + suited,\n\t\t\tvalue: rank + suited\n\t\t};\n\t});\n\nconst stateOptions = [ 'A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2' ].reduce(\n\t(acc, rank) => [ ...acc, ...addSuits(rank) ],\n\t[]\n);\nconst stateOptionsSuit = _.map([ 'c', 's', 'h', 'd' ], (state, index) => ({\n\tkey: state,\n\ttext: state,\n\tvalue: state\n}));\n\nexport const assignPositions = (rangeRepoIP, rangeRepoOOP, selectedRanges, isIP) => {\n\tlet newRanges, newRangeIP, newRangeOOP;\n\tif (isIP) {\n\t\tnewRanges = rangeRepoIP.map((RangeObj) => RangeObj.getRangesObject());\n\t\tnewRangeIP = rangeRepoIP.map((RangeObj) => RangeObj.getRangesObject());\n\t\tnewRangeOOP = selectedRanges.map((RangeObj) => RangeObj.getRangesObject());\n\t} else {\n\t\tnewRanges = rangeRepoOOP.map((RangeObj) => RangeObj.getRangesObject());\n\t\tnewRangeIP = selectedRanges.map((RangeObj) => RangeObj.getRangesObject());\n\t\tnewRangeOOP = rangeRepoOOP.map((RangeObj) => RangeObj.getRangesObject());\n\t}\n\treturn [ newRangeIP, newRangeOOP, newRanges ];\n};\n\n// TODO: Add functionality to assign, ranges, clear selection, clear suits, split suits\nconst InputForm = ({ mode: { street }, deadcards, onManuallyChooseSuitsHandler }) => {\n\tconst dispatch = useDispatch();\n\tconst [ state, setState ] = useState({ active: false });\n\n\tconst onCloseModal = () => {\n\t\tsetState({\n\t\t\tactive: false\n\t\t});\n\t};\n\n\tconst onChangeStreetHandler = (e, { value: values }) => {\n\t\tdispatch(initSetDeadCards(values));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Segment.Group inverted stacked>\n\t\t\t\t<Segment.Group inverted color=\"green\">\n\t\t\t\t\t<Label ribbon color={deadcards.length >= 3 && deadcards.length <= 5 ? 'green' : 'red'}>\n\t\t\t\t\t\t{deadcards.length >= 3 && deadcards.length <= 5 ? (\n\t\t\t\t\t\t\t<Icon name=\"thumbs up\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Icon name=\"thumbs down\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tBoard\n\t\t\t\t\t</Label>\n\n\t\t\t\t\t<InputStreet street={street} />\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tplaceholder=\"Choose multiple cards\"\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tselection\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tsearch\n\t\t\t\t\t\toptions={stateOptions}\n\t\t\t\t\t\tvalue={deadcards}\n\t\t\t\t\t\tonChange={onChangeStreetHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Segment.Group>\n\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment textAlign=\"center\">\n\t\t\t\t\t\t<Button color=\"blue\" onClick={onManuallyChooseSuitsHandler}>\n\t\t\t\t\t\t\tManually Choose Suits\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Segment>\n\t\t\t\t</Segment.Group>\n\t\t\t</Segment.Group>\n\t\t</div>\n\t);\n};\nconst mapStateToProps = () => {\n\tconst getRange = makeSelectRange();\n\tconst getRangeRepoIP = makeSelectRangeRepoIP();\n\tconst getRangeRepoOOP = makeSelectRangeRepoOOP();\n\tconst getPosition = makeSelectPosition();\n\tconst getMode = makeSelectMode();\n\tconst getDeadcards = makeSelectDeadcards();\n\n\tconst mapState = (state) => {\n\t\treturn {\n\t\t\tselectedRanges: getRange(state),\n\t\t\trangeRepoIP: getRangeRepoIP(state),\n\t\t\trangeRepoOOP: getRangeRepoOOP(state),\n\t\t\tPosition: getPosition(state),\n\t\t\tmode: getMode(state),\n\t\t\tdeadcards: getDeadcards(state)\n\t\t};\n\t};\n\treturn mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(InputForm);\n","import initialState from './reducer';\nimport { ranges } from './sampleData';\n\nexport const mapNewHandRange = (oldHandRange, draftModeStreet, draftModeStreetAction, actionDataCards) => {\n\treturn oldHandRange.map((range) => {\n\t\tlet rangeObj = range.getRangesObject();\n\t\tif (\n\t\t\trangeObj.hands.filter((hand) => actionDataCards.indexOf(hand) >= 0).length > 0 &&\n\t\t\trangeObj.Street === draftModeStreet &&\n\t\t\trangeObj.BetType === draftModeStreetAction\n\t\t)\n\t\t\treturn {\n\t\t\t\tStreet: rangeObj.Street,\n\t\t\t\tBetType: rangeObj.BetType,\n\t\t\t\thands: rangeObj.hands.filter((hand) => !(actionDataCards.indexOf(hand) >= 0))\n\t\t\t};\n\t\telse if (rangeObj.Street === draftModeStreet && rangeObj.BetType === draftModeStreetAction)\n\t\t\treturn {\n\t\t\t\tStreet: rangeObj.Street,\n\t\t\t\tBetType: rangeObj.BetType,\n\t\t\t\thands: [ ...rangeObj.hands, ...actionDataCards ]\n\t\t\t};\n\t\telse {\n\t\t\treturn rangeObj;\n\t\t}\n\t});\n};\n","import { createSelector } from 'reselect';\nimport { initialState } from '../reducer';\nimport RangeObject from '../EngineClasses/RangeObject';\nimport { CardHandSuitBuilder } from '../EngineClasses/CardHandSuitBuilder';\n\nconst copyHands = (hands) =>\n\thands.map((hand) =>\n\t\tnew CardHandSuitBuilder().build(\n\t\t\thand.length <= 3 ? hand.substr(0, 1) : hand.substr(0, 2),\n\t\t\thand.length <= 3 ? hand.substr(1, 1) : hand.substr(2, 2),\n\t\t\thand.length <= 3 ? hand.substr(2, hand.length - 1) : ''\n\t\t)\n\t);\n\nconst selectGlobal = (state) => state.global || initialState; //??\n\nconst makeSelectIsIp = () => createSelector(selectGlobal, (globalState) => globalState.mode.isIP);\nconst makeSelectStreet = () => createSelector(selectGlobal, (globalState) => globalState.mode.Street);\n\nconst makeSelectRangeRepoIP = () =>\n\tcreateSelector(selectGlobal, (globalState) =>\n\t\tglobalState.rangeRepoIP.map(({ Street, BetType, hands }) => new RangeObject(Street, BetType, copyHands(hands)))\n\t);\n\nconst makeSelectRangeRepoOOP = () =>\n\tcreateSelector(selectGlobal, (globalState) =>\n\t\tglobalState.rangeRepoOOP.map(({ Street, BetType, hands }) => new RangeObject(Street, BetType, copyHands(hands)))\n\t);\nconst makeSelectRange = () =>\n\tcreateSelector(selectGlobal, (globalState) =>\n\t\tglobalState.ranges.map(({ Street, BetType, hands }) => new RangeObject(Street, BetType, copyHands(hands)))\n\t);\nexport { makeSelectIsIp, makeSelectStreet, makeSelectRangeRepoIP, makeSelectRangeRepoOOP, makeSelectRange };\n","import React, { memo, useState, useEffect } from 'react';\nimport { Step, Icon, Button } from 'semantic-ui-react';\nimport { initIsIP } from './action';\nimport { useDispatch } from 'react-redux';\nimport {\n\tmakeSelectIsIp,\n\tmakeSelectRangeRepoIP,\n\tmakeSelectRangeRepoOOP,\n\tmakeSelectRange,\n\tmakeSelectStreet\n} from './selector';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport reducer from './reducer';\nimport useInjectReducer from '../../../HOC/useInjectReducer';\n\nconst key = 'global';\n\n//TODO: Note testin code for this code is elsewhere\nexport const assignPositions = (rangeRepoIP, rangeRepoOOP, selectedRanges, isIP) => {\n\tlet newRanges, newRangeIP, newRangeOOP;\n\tif (!isIP) {\n\t\tnewRanges = copyRangesFrom(rangeRepoOOP);\n\t\tnewRangeIP = copyRangesFrom(selectedRanges);\n\t\tnewRangeOOP = copyRangesFrom(rangeRepoOOP);\n\t} else {\n\t\tnewRanges = copyRangesFrom(rangeRepoIP);\n\t\tnewRangeIP = copyRangesFrom(rangeRepoIP);\n\t\tnewRangeOOP = copyRangesFrom(selectedRanges);\n\t}\n\treturn [ newRangeIP, newRangeOOP, newRanges ];\n};\n\nconst copyRangesFrom = (copyRange) => copyRange.map((RangeObj) => RangeObj.getRangesObject());\n\nexport const handsInRange = (inpRange, street) => {\n\tif (inpRange.length === 0) return false;\n\tconst handsInRange = inpRange.filter((rangeObject) => rangeObject.filterForHandsInRange(street).length > 0);\n\tconst isHandsSelected = handsInRange.length > 0;\n\n\treturn isHandsSelected;\n};\n\nconst ProgressIndicator = ({ street, isIP, rangeRepoIP, rangeRepoOOP, selectedRanges }) => {\n\tuseInjectReducer({key, reducer});\n\tconst dispatch = useDispatch();\n\tconst [ handsIPUsed, setHandsIPUsed ] = useState(handsInRange(rangeRepoIP, street));\n\tconst [ handsOOPUsed, setHandsOOPUsed ] = useState(handsInRange(rangeRepoOOP, street));\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetHandsIPUsed(handsInRange(isIP ? selectedRanges : rangeRepoIP, street));\n\t\t\tsetHandsOOPUsed(handsInRange(!isIP ? selectedRanges : rangeRepoOOP, street));\n\t\t},\n\t\t[ selectedRanges, rangeRepoIP, rangeRepoOOP, street, isIP ]\n\t);\n\n\tconst onChangePosition = (e, { value }) => {\n\t\tlet [ newRangeIP, newRangeOOP, newRanges ] = assignPositions(rangeRepoIP, rangeRepoOOP, selectedRanges, value);\n\n\t\tdispatch(\n\t\t\tinitIsIP({\n\t\t\t\tposition: value,\n\t\t\t\tnewRangeIP,\n\t\t\t\tnewRangeOOP,\n\t\t\t\tnewRanges\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<Step.Group fluid>\n\t\t\t<Step completed={handsIPUsed}>\n\t\t\t\t<Icon name=\"thumbs down\" color=\"red\" />\n\t\t\t\t<Step.Content>\n\t\t\t\t\t<Step.Description>\n\t\t\t\t\t\t<Button name=\"Position\" value={true} active={isIP} inverted primary onClick={onChangePosition}>\n\t\t\t\t\t\t\t<strong>In Position</strong>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Step.Description>\n\t\t\t\t</Step.Content>\n\t\t\t</Step>\n\t\t\t<Step completed={handsOOPUsed}>\n\t\t\t\t<Icon name=\"thumbs down\" color=\"red\" />\n\t\t\t\t<Step.Content>\n\t\t\t\t\t<Step.Description>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tname=\"Position\"\n\t\t\t\t\t\t\tvalue={false}\n\t\t\t\t\t\t\tactive={!isIP}\n\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\tonClick={onChangePosition}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<strong>Out Of Position</strong>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Step.Description>\n\t\t\t\t</Step.Content>\n\t\t\t</Step>\n\t\t</Step.Group>\n\t);\n};\n\nconst mapStateToProps = () => {\n\tconst getIsIp = makeSelectIsIp();\n\tconst getStreet = makeSelectStreet();\n\tconst getRangeRepoIP = makeSelectRangeRepoIP();\n\tconst getRangeRepoOOP = makeSelectRangeRepoOOP();\n\tconst getSelectedRanges = makeSelectRange();\n\n\tconst mapState = (state) => {\n\t\treturn {\n\t\t\tisIP: getIsIp(state),\n\t\t\tStreet: getStreet(state),\n\t\t\trangeRepoIP: getRangeRepoIP(state),\n\t\t\trangeRepoOOP: getRangeRepoOOP(state),\n\t\t\tselectedRanges: getSelectedRanges(state)\n\t\t};\n\t};\n\treturn mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(ProgressIndicator);\n","import React, { memo, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nimport { Table, Button } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { changeModeSuitSelection } from \"../actions\";\nimport { makeSelectMode } from \"../selectors\";\nimport reducer from \"../reducer\";\nimport useInjectReducer from \"../../../HOC/useInjectReducer\";\n\nconst key = \"global\";\n\nconst SuitSelection = ({ mode: { suitSelection }, open, onCloseHandler }) => {\n  const dispatch = useDispatch();\n  const [opens, setOpens] = useState(open);\n  useInjectReducer({ key, reducer });\n\n  useEffect(() => {\n    setOpens(open);\n  }, [open]);\n\n  const onSuitSelectHandler = (e, { assignedsuit }) => {\n    dispatch(changeModeSuitSelection(assignedsuit));\n  };\n  return (\n    <Modal\n      show={opens}\n      onHide={() => {\n        onCloseHandler();\n        setOpens(false);\n      }}\n      size=\"lg\"\n    >\n      <Modal.Header>Choose a Suit</Modal.Header>\n      <Modal.Body>\n        <Table celled padded>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"ss\"\n                  active={(suitSelection || []).indexOf(\"ss\") >= 0}\n                >\n                  Spade Spade\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"sc\"\n                  active={(suitSelection || []).indexOf(\"sc\") >= 0}\n                >\n                  Spade Club\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"sd\"\n                  active={(suitSelection || []).indexOf(\"sd\") >= 0}\n                >\n                  Spade Diamond\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"sh\"\n                  active={(suitSelection || []).indexOf(\"sh\") >= 0}\n                >\n                  Spade Heart\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"cs\"\n                  active={(suitSelection || []).indexOf(\"cs\") >= 0}\n                >\n                  Club Spade\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"cc\"\n                  active={(suitSelection || []).indexOf(\"cc\") >= 0}\n                >\n                  Club Club\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"cd\"\n                  active={(suitSelection || []).indexOf(\"cd\") >= 0}\n                >\n                  Club Diamond\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"ch\"\n                  active={(suitSelection || []).indexOf(\"ch\") >= 0}\n                >\n                  Club Heart\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"ds\"\n                  active={(suitSelection || []).indexOf(\"ds\") >= 0}\n                >\n                  Diamond Spade\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"dc\"\n                  active={(suitSelection || []).indexOf(\"dc\") >= 0}\n                >\n                  Diamond Club\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"dd\"\n                  active={(suitSelection || []).indexOf(\"dd\") >= 0}\n                >\n                  Diamond Diamond\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"dh\"\n                  active={(suitSelection || []).indexOf(\"dh\") >= 0}\n                >\n                  Diamond Heart\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"hs\"\n                  active={(suitSelection || []).indexOf(\"hs\") >= 0}\n                >\n                  Heart Spade\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"hc\"\n                  active={(suitSelection || []).indexOf(\"hc\") >= 0}\n                >\n                  Heart Club\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"hd\"\n                  active={(suitSelection || []).indexOf(\"hd\") >= 0}\n                >\n                  Heart Diamond\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                <Button\n                  inverted\n                  color=\"blue\"\n                  onClick={onSuitSelectHandler}\n                  assignedsuit=\"hh\"\n                  active={(suitSelection || []).indexOf(\"hh\") >= 0}\n                >\n                  Heart Heart\n                </Button>\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = () => {\n  const getMode = makeSelectMode();\n\n  const mapState = (state) => {\n    return {\n      mode: getMode(state),\n    };\n  };\n  return mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(SuitSelection);\n","/**\n * The Current Range Selector\n */\n\nimport { createSelector } from \"reselect\";\n\nimport { initialState } from \"../reducer\";\nimport RangeObject from \"../EngineClasses/RangeObject\";\nimport { CardHandSuitBuilder } from \"../EngineClasses/CardHandSuitBuilder\";\nimport { RangeObjectCollection } from \"../EngineClasses/RangeObjectCollection\";\n\nconst copyHands = hands =>\n  hands.map(hand =>\n    new CardHandSuitBuilder().build(\n      hand.length <= 3 ? hand.substr(0, 1) : hand.substr(0, 2),\n      hand.length <= 3 ? hand.substr(1, 1) : hand.substr(2, 2),\n      hand.length <= 3 ? hand.substr(2, hand.length - 1) : \"\"\n    )\n  );\n\nexport class SelectedStreet{ \n    constructor(ranges, mode) {\n    this.ranges = ranges;\n    this.mode = mode;\n    }\n    filterStreet () {\n          this.ranges = this.ranges.filter(({ Street, BetType }) => Street === this.mode?.street &&\n          (this.mode?.useTwoFlopSizes\n            ? true\n            : !(BetType === \"SmallValuebet\" || BetType === \"SmallBluff\"))\n          )\n          return this;\n        }\n    displayStreetObject () {\n        return this.ranges.map(({Street, BetType, hands}) => \n        new RangeObject(Street, BetType, copyHands(hands)))\n    }\n}\n\nconst selectGlobal = state => state.global || initialState\n\nconst makeSelectMode = () =>\n  createSelector(selectGlobal, globalState => globalState.mode);\n\nconst makeSelectSelectedStreet = () =>\n  createSelector(selectGlobal, global =>\n    new RangeObjectCollection(global?.ranges)\n    .displayRangeByStreet({ Street: global?.mode?.street, \n      useTwoFlopSizes: global?.mode?.useTwoFlopSizes})\n  );\nexport { \n    makeSelectMode,\n    makeSelectSelectedStreet \n};","import React, { memo, useCallback, useState, useEffect } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport { compose } from \"redux\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { makeSelectMode, makeSelectSelectedStreet } from \"./selector\";\nimport { initSetHandRangeSelect } from \"./actions\";\nimport useInjectReducer from \"../../../HOC/useInjectReducer\";\nimport reducer from './reducer'\n\nconst buttonColors = {\n  Valuebet: \"green\",\n  Bluff: \"red\",\n  CheckCall: \"blue\",\n  CheckFold: \"purple\",\n  SmallValuebet: \"teal\",\n  SmallBluff: \"orange\",\n  Raise4BetCall: \"green\",\n  Raise4BetFold: \"red\",\n  RaiseCall: \"blue\",\n  RaiseFold: \"violet\",\n  CheckDown: \"blue\"\n};\n\nconst displayProperRange = (isIP, street, RangeObject) => {\n  if (\n    street === \"Flop\" &&\n    isIP == false &&\n    RangeObject.getRangesObject().BetType === \"Valuebet\"\n  )\n    return \"Value Check-Raise\";\n  if (\n    street === \"Flop\" &&\n    isIP == false &&\n    RangeObject.getRangesObject().BetType === \"Bluff\"\n  )\n    return \"Bluff Check-Raise\";\n\n  return RangeObject.getRangesObject().BetType;\n};\n\nconst rangeText = (rangeObject, betType, streetAction) => {\n  if (\n    rangeObject.getFriendlyRangeOutput().length < 3 &&\n    betType === streetAction\n  )\n    return \"Please select a hand\";\n  else if (\n    rangeObject.getFriendlyRangeOutput().length < 3 &&\n    betType !== streetAction\n  )\n    return \"You must select this Bet Type to add to this range.\";\n  else return rangeObject.getFriendlyRangeOutput();\n};\nconst CurrentRanges = ({\n  mode: { streetAction, street, isIP },\n  selectedStreet\n}) => {\n  const dispatch = useDispatch();\n const [changingStreet, updateChangingStreet] = useState(selectedStreet);\n\n  useEffect(() => {\n    updateChangingStreet(selectedStreet);\n  }, [selectedStreet]);\n\n  const onHandleStreetHandler = (e, { name, value }) => {\n    dispatch(\n      initSetHandRangeSelect({\n        name,\n        value\n      })\n    );\n  };\n\n  return (\n    <>\n      <Table celled structured selectable>\n        <Table.Body stackable>\n          {changingStreet.map((RangeObject, idx) => (\n            <Table.Row>\n              <Table.Cell>\n                <Button\n                  onClick={onHandleStreetHandler}\n                  id={\n                    \"street\" +\n                    [\"First\", \"Second\", \"Third\", \"Fourth\"][idx] +\n                    \"Choice\"\n                  }\n                  name={street}\n                  value={RangeObject.getRangesObject().BetType}\n                  active={\n                    RangeObject.getRangesObject().BetType === streetAction\n                  }\n                  inverted\n                  color={buttonColors[RangeObject.getRangesObject().BetType]}\n                >\n                  {displayProperRange(isIP, street, RangeObject)}\n                </Button>\n              </Table.Cell>\n              <Table.Cell>\n                {rangeText(\n                  RangeObject,\n                  RangeObject.getRangesObject().BetType,\n                  streetAction\n                )}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </>\n  );\n};\n\nconst mapStateToProps = () => {\n  const getMode = makeSelectMode();\n  const getSelectedStreet = makeSelectSelectedStreet();\n\n  const mapState = state => {\n    return {\n      mode: getMode(state),\n      selectedStreet: getSelectedStreet(state)\n    };\n  };\n  return mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(CurrentRanges);\n","import React, { useState, useEffect, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Board from './Board';\nimport { useDispatch } from 'react-redux';\nimport BoardLegend from './BoardLegend/BoardLegend';\nimport {\n\tmakeSelectRange,\n\tmakeSelectSelectedStreet,\n\tmakeSelectMode,\n\tmakeSelectDeadcards,\n\tmakeSelectRangeRepoIP,\n\tmakeSelectRangeRepoOOP\n} from './selectors';\nimport { initSetHandRangeSelect, initSetHandRange } from './actions';\n\nimport reducer from './reducer';\nimport { useInjectReducer } from '../../HOC/useInjectReducer';\nimport { useInjectSaga } from '../../HOC/injectSaga';\nimport saga from './saga';\n\nimport InputForm from './InputForm';\nimport styled from 'styled-components';\n\nimport { mapNewHandRange } from './stateRangeFunctions';\nimport ProgressIndicator from './ProgressIndicator';\nimport SuitSelector from './SuitSelector';\nimport CurrentRanges from './CurrentRanges';\n\nconst MainPageContainer = styled.div`\n\tdisplay: block;\n\tpadding: 0px !important;\n\n\t@media (min-width: 1200px) {\n\t\tdisplay: flex;\n\t}\n`;\n\nconst LeftPane = styled.div`\n\tpadding: 0px !important;\n\t@media (min-width: 1200px) {\n\t\tmargin: 25px;\n\t\twidth: 900px;\n\t}\n`;\n\nconst RightPane = styled.div`\n\tpadding: 0px;\n\t@media (min-width: 1200px) {\n\t\tmargin: 25px;\n\t}\n`;\n\nconst key = 'global';\n//TO-DO: Rounded corners on navigation bar, spaces on buttons, more whitespace, needs instructions\n\nconst MainPage = ({ ranges, rangeColors, mode, mode: { street, streetAction, isIP, suitSelection }, token }) => {\n\tuseInjectReducer({ key, reducer });\n\tuseInjectSaga({ key, saga });\n\tconst dispatch = useDispatch();\n\tconst [ openChooseSuitModal, updateOpenChooseSuitModal ] = useState(false);\n\n\tuseEffect(() => {\n\t\tupdateOpenChooseSuitModal(false);\n\t}, []);\n\n\tconst onHandleStreetHandler = (e, { name, value }) => {\n\t\tdispatch(\n\t\t\tinitSetHandRange({\n\t\t\t\tname,\n\t\t\t\tvalue\n\t\t\t})\n\t\t);\n\t};\n\n\tconst onHandleStreetHandlerButtons = (e, { street, streetAction }) => {\n\t\tdispatch(initSetHandRangeSelect({ name: street, value: streetAction }));\n\t};\n\n\tconst onMouseOverHandler = (data) => {\n\t\tif (data.onMouseDownEvent) {\n\t\t\tlet newHandRange = [];\n\t\t\t//if a suited hand was selected, and the suitSelection is offsuit, just return\n\t\t\tif (\n\t\t\t\tsuitSelection.filter(\n\t\t\t\t\t(suit) =>\n\t\t\t\t\t\tsuit && data.cards.substring(2, 3) === 's' && suit.substring(0, 1) !== suit.substring(1, 2)\n\t\t\t\t).length > 0\n\t\t\t)\n\t\t\t\treturn;\n\t\t\t//if a offsuit hand was selected, and the suitSelection is suited, just return\n\t\t\tif (\n\t\t\t\tsuitSelection.filter(\n\t\t\t\t\t(suit) =>\n\t\t\t\t\t\tsuit &&\n\t\t\t\t\t\t(data.cards.substring(2, 3) === 'o' || data.cards.length === 2) &&\n\t\t\t\t\t\tsuitSelection[0].substring(0, 1) === suitSelection[0].substring(1, 2)\n\t\t\t\t).length > 0\n\t\t\t)\n\t\t\t\treturn;\n\t\t\tif (suitSelection.length > 0) {\n\t\t\t\tsuitSelection.forEach((suit) => {\n\t\t\t\t\tif (suit)\n\t\t\t\t\t\tnewHandRange = [\n\t\t\t\t\t\t\t...newHandRange,\n\t\t\t\t\t\t\tdata.cards.substring(0, 1) +\n\t\t\t\t\t\t\t\tsuit.substring(0, 1) +\n\t\t\t\t\t\t\t\tdata.cards.substring(1, 2) +\n\t\t\t\t\t\t\t\tsuit.substring(1, 2)\n\t\t\t\t\t\t];\n\t\t\t\t});\n\t\t\t\tdispatch(initSetHandRange(mapNewHandRange(ranges, street, streetAction, newHandRange)));\n\t\t\t} else {\n\t\t\t\tnewHandRange = mapNewHandRange(ranges, street, streetAction, [ data.cards ]);\n\t\t\t\tdispatch(initSetHandRange(newHandRange));\n\t\t\t}\n\t\t}\n\t\treturn data.cards;\n\t};\n\n\tconst onManuallyChooseSuitsHandler = () => {\n\t\tupdateOpenChooseSuitModal(true);\n\t};\n\n\t//TO-DO: need to align these left-to-right on big screens, top-to-bottom mobile\n\treturn (\n\t\t<div>\n\t\t\t<SuitSelector open={openChooseSuitModal} onCloseHandler={() => updateOpenChooseSuitModal(false)} />\n\t\t\t<MainPageContainer>\n\t\t\t\t<LeftPane>\n\t\t\t\t\t<ProgressIndicator />\n\t\t\t\t\t<Board onMouseOverHandler={onMouseOverHandler} rangeColors={rangeColors} />\n\t\t\t\t\t<CurrentRanges />\n\t\t\t\t</LeftPane>\n\t\t\t\t<RightPane>\n\t\t\t\t\t<InputForm onManuallyChooseSuitsHandler={onManuallyChooseSuitsHandler} />\n\t\t\t\t\t<BoardLegend\n\t\t\t\t\t\tonHandleStreetHandler={onHandleStreetHandler}\n\t\t\t\t\t\tonHandleStreetHandlerButtons={onHandleStreetHandlerButtons}\n\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t/>\n\t\t\t\t</RightPane>\n\t\t\t</MainPageContainer>\n\t\t</div>\n\t);\n};\nMainPage.propTypes = {\n\tranges: PropTypes.array,\n\tmode: PropTypes.object,\n\trangeColors: PropTypes.object\n};\n\nconst mapStateToProps = () => {\n\tconst getMapRange = makeSelectRange();\n\tconst getSelectRange = makeSelectSelectedStreet();\n\tconst getMode = makeSelectMode();\n\tconst getDeadcards = makeSelectDeadcards();\n\tconst getRangeRepoIP = makeSelectRangeRepoIP();\n\tconst getRangeRepoOOP = makeSelectRangeRepoOOP();\n\n\tconst mapState = (state) => {\n\t\treturn {\n\t\t\tranges: getMapRange(state),\n\t\t\twholeRange: getSelectRange(state), //TODO: change to streetname\n\t\t\tmode: getMode(state),\n\t\t\tboard: getDeadcards(state),\n\t\t\trangeRepoIP: getRangeRepoIP(state),\n\t\t\trangeRepoOOP: getRangeRepoOOP(state)\n\t\t};\n\t};\n\treturn mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(MainPage);\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport ScenarioComponent from \"./scenarioComponent\";\n\nconst ScenariosComponent = ({ scenarios, position, activePage }) => {\n  scenarios.position = position;\n\n  return (\n    <Table height=\"502px\" unstackable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Scenario Name</Table.HeaderCell>\n          <Table.HeaderCell>Open</Table.HeaderCell>\n          <Table.HeaderCell>Defend</Table.HeaderCell>\n          <Table.HeaderCell>Board</Table.HeaderCell>\n          <Table.HeaderCell></Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {scenarios.filteredScenarios({ activePage }).map((scenario) => (\n          <ScenarioComponent\n            scenario={scenario}\n            token={scenarios.token}\n            className=\"scenario-component-rendered\"\n          />\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default ScenariosComponent;\n","import React, { memo, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button, Pagination, Tab } from \"semantic-ui-react\";\nimport { initialState } from \"../reducer\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { makeSelectScenariosClass } from \"../selectors\";\nimport { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ScenariosComponent from \"./ScenariosComponent\";\nconst panes = (Scenarios, activePage, numScenarioArray, windowWidth) => [\n  {\n    menuItem: `UTG${windowWidth > 500 ? \"(\" + numScenarioArray[0] + \")\" : \"\"}`,\n    render: () => (\n      <ScenariosComponent\n        position={\"UTG\"}\n        activePage={activePage}\n        scenarios={Scenarios}\n      />\n    ),\n  },\n  {\n    menuItem: `MP${windowWidth > 500 ? \"(\" + numScenarioArray[1] + \")\" : \"\"}`,\n    render: () => (\n      <ScenariosComponent\n        position={\"MP\"}\n        activePage={activePage}\n        scenarios={Scenarios}\n      />\n    ),\n  },\n  {\n    menuItem: `CO${windowWidth > 500 ? \"(\" + numScenarioArray[2] + \")\" : \"\"}`,\n    render: () => (\n      <ScenariosComponent\n        position={\"CO\"}\n        activePage={activePage}\n        scenarios={Scenarios}\n      />\n    ),\n  },\n  {\n    menuItem: `BU${windowWidth > 500 ? \"(\" + numScenarioArray[3] + \")\" : \"\"}`,\n    render: () => (\n      <ScenariosComponent\n        position={\"BU\"}\n        activePage={activePage}\n        scenarios={Scenarios}\n      />\n    ),\n  },\n  {\n    menuItem: `SB${windowWidth > 500 ? \"(\" + numScenarioArray[4] + \")\" : \"\"}`,\n    render: () => (\n      <ScenariosComponent\n        position={\"SB\"}\n        activePage={activePage}\n        scenarios={Scenarios}\n      />\n    ),\n  },\n];\n\nconst StyledTab = styled(Tab)`\n  font-size: 10px !important;\n  padding: 0px;\n  @media (min-width: 500px) {\n    font-size: 14px;\n  }\n`;\n\nconst ScenarioLoader = ({ active, token, onCloseModal, scenarios }) => {\n  const [activePage, updateActivePage] = useState(1);\n  const [totalPages, updateTotalPages] = useState(\n    1 + Math.floor(scenarios.filteredScenariosPosition() / 10)\n  );\n  const [injectedScenarios, setInjectedScenarios] = useState(scenarios);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    setInjectedScenarios(scenarios.injectToken(token));\n  }, [scenarios, token]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\n    return () =>\n      window.removeEventListener(\"resize\", () =>\n        setWindowWidth(window.innerWidth)\n      );\n  }, []);\n\n  return (\n    <Modal onHide={onCloseModal} show={active} size=\"large\">\n      <Modal.Header>\n        <Modal.Title>Select a Scenario</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ padding: \"0px\" }}>\n        <StyledTab\n          panes={panes(\n            scenarios.injectToken(token),\n            activePage,\n            scenarios.injectToken(token).filteredScenariosArray(),\n            windowWidth\n          )}\n          onTabChange={(e, { activeIndex, panes }) =>\n            updateTotalPages(\n              1 +\n                Math.floor(scenarios.filteredScenariosArray()[activeIndex] / 10)\n            )\n          }\n        />\n        <Pagination\n          defaultActivePage={1}\n          onPageChange={(e, { activePage }) => updateActivePage(activePage)}\n          pointing\n          secondary\n          totalPages={totalPages}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onCloseModal}>Close</Button>\n        <Button onClick={onCloseModal}>Save Changes</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = () => {\n  const getScenarios = makeSelectScenariosClass();\n\n  const mapState = (state) => {\n    return {\n      scenarios: getScenarios(state),\n    };\n  };\n  return mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(ScenarioLoader);\n","import React from \"react\";\nimport { Label, Radio, Form } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst PositionField = styled(Form.Field)`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\nconst PositionComponent = ({ position, setPosition, componentLabel }) => {\n  return (\n    <PositionField>\n      <Label>{componentLabel}</Label>\n      {componentLabel === \"Open\" ? (\n        <Radio\n          label=\"UTG\"\n          name={\"position\" && componentLabel}\n          value=\"UTG\"\n          checked={position === \"UTG\"}\n          onChange={() => setPosition(\"UTG\")}\n        />\n      ) : null}\n      <Radio\n        label=\"MP\"\n        name={\"position\" && componentLabel}\n        value=\"MP\"\n        checked={position === \"MP\"}\n        onChange={() => setPosition(\"MP\")}\n      />\n      <Radio\n        label=\"CO\"\n        name={\"position\" && componentLabel}\n        value=\"CO\"\n        checked={position === \"CO\"}\n        onChange={() => setPosition(\"CO\")}\n      />\n      <Radio\n        label=\"BU\"\n        name={\"position\" && componentLabel}\n        value=\"BU\"\n        checked={position === \"BU\"}\n        onChange={() => setPosition(\"BU\")}\n      />\n      <Radio\n        label=\"SB\"\n        name={\"position\" && componentLabel}\n        value=\"SB\"\n        checked={position === \"SB\"}\n        onChange={() => setPosition(\"SB\")}\n      />\n      {componentLabel === \"Defend\" ? (\n        <Radio\n          label=\"BB\"\n          name={\"position\" && componentLabel}\n          value=\"BB\"\n          checked={position === \"BB\"}\n          onChange={() => setPosition(\"BB\")}\n        />\n      ) : null}\n    </PositionField>\n  );\n};\n\nexport default PositionComponent;\n","import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Form, Input, Radio, Label, Dropdown } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport PositionComponent from \"./PositionComponent\";\n\nconst addSuits = (rank) =>\n  [\"c\", \"s\", \"h\", \"d\"].map((suited) => {\n    return {\n      key: rank + suited,\n      text: rank + suited,\n      value: rank + suited,\n    };\n  });\n\nconst stateOptions = [\n  \"A\",\n  \"K\",\n  \"Q\",\n  \"J\",\n  \"T\",\n  \"9\",\n  \"8\",\n  \"7\",\n  \"6\",\n  \"5\",\n  \"4\",\n  \"3\",\n  \"2\",\n].reduce((acc, rank) => [...acc, ...addSuits(rank)], []);\n\nconst SaveModal = ({ isOpen, setIsOpen, onSave }) => {\n  const [positionOpener, setPositionOpener] = useState(\"UTG\");\n  const [positionDefender, setPositionDefender] = useState(\"MP\");\n  const [inputBoard, updateInputBoard] = useState([]);\n  const [Filename, updateFilename] = useState();\n\n  return (\n    <Modal show={isOpen} size=\"medium\" onHide={setIsOpen}>\n      <Form\n        onSubmit={() =>\n          onSave({ positionOpener, positionDefender, inputBoard, Filename })\n        }\n      >\n        <Modal.Header>\n          <Modal.Title>Save a Scenario</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Field>\n            <Input\n              name=\"Filename\"\n              label=\"Filename\"\n              onChange={(_, { value }) => updateFilename(value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Dropdown\n              name=\"saveBoard\"\n              placeholder=\"Choose three flop cards\"\n              fluid\n              selection\n              multiple\n              search\n              options={stateOptions}\n              onChange={(_, { value }) => updateInputBoard(value)}\n            />\n          </Form.Field>\n          <PositionComponent\n            name=\"OpenerPostion\"\n            position={positionOpener}\n            setPosition={setPositionOpener}\n            componentLabel=\"Open\"\n          />\n          <PositionComponent\n            name=\"DefendingPosition\"\n            position={positionDefender}\n            setPosition={setPositionDefender}\n            componentLabel=\"Defend\"\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={setIsOpen}>Close</Button>\n          <Button type=\"submit\">Save Changes</Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default SaveModal;\n","import React, { Fragment, useState, useEffect, memo } from \"react\";\n\nimport { Menu, Item, Button, Dropdown, Icon, Modal } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, connect } from \"react-redux\";\nimport {\n  initGetAllScenario,\n  initSaveScenario,\n  changeUseOneFlopBetsize,\n} from \"../../containers/MainPage/actions\";\nimport ScenarioLoader from \"../../containers/MainPage/ScenarioLoader\";\nimport {\n  makeSelectMode,\n  makeSelectSelectedStreet,\n  makeSelectDeadcards,\n  makeSelectRange,\n} from \"../../containers/MainPage/selectors\";\nimport { compose } from \"redux\";\nimport {\n  makeSelectRangeRepoIP,\n  makeSelectRangeRepoOOP,\n} from \"../../containers/MainPage/ProgressIndicator/selector\";\nimport SaveModal from \"./SaveModal\";\n\nconst Navbar = ({\n  isAuthenticated,\n  loginWithRedirect,\n  logout,\n  user,\n  token,\n  deadcards,\n  selectedRanges,\n  rangeRepoIP,\n  rangeRepoOOP,\n  mode: { isIP, useTwoFlopSizes },\n  updateTourOpen,\n}) => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({ active: false });\n  const [isOpen, setIsOpen] = useState(false);\n\n  const isOpenHandler = () => setIsOpen(!isOpen);\n\n  const onCloseModal = () => {\n    setState({\n      active: false,\n    });\n  };\n\n  const onSave = ({\n    positionOpener,\n    positionDefender,\n    inputBoard,\n    Filename,\n  }) => {\n    dispatch(\n      initSaveScenario({\n        token,\n        deadcards: inputBoard.reduce((acc, curr) => acc + curr, \"\"),\n        OpenerPosition: positionOpener,\n        Filename,\n        DefenderPosition: positionDefender,\n        user: user || \"default\", //FIXME: shouldn't be here at all, not sure what it will break\n        rangeRepoIP: isIP\n          ? selectedRanges.map((range) => range.getRangesObject())\n          : rangeRepoIP.map((range) => range.getRangesObject()),\n        rangeRepoOOP: !isIP\n          ? selectedRanges.map((range) => range.getRangesObject())\n          : rangeRepoOOP.map((range) => range.getRangesObject()),\n      })\n    );\n  };\n\n  return (\n    <Menu inverted>\n      <Menu.Item>\n        <Dropdown text=\"File\">\n          <Dropdown.Menu>\n            <Dropdown.Item\n              text=\"Open Scenario\"\n              onClick={() => {\n                dispatch(initGetAllScenario(token));\n                setState({ active: true });\n              }}\n            />\n            <Dropdown.Item text=\"Save Scenario\" onClick={isOpenHandler} />\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Item>\n      <SaveModal isOpen={isOpen} setIsOpen={isOpenHandler} onSave={onSave} />\n      <Menu.Item>\n        <Dropdown text=\"Edit\">\n          <Dropdown.Menu>\n            <Dropdown.Item\n              text={\n                <>\n                  {\" \"}\n                  Use One Flop Betsize\n                  {!useTwoFlopSizes ? <Icon name=\"checkmark\" /> : \"\"}\n                </>\n              }\n              onClick={() => dispatch(changeUseOneFlopBetsize(false))}\n            />\n            <Dropdown.Item\n              text={\n                <>\n                  {\" \"}\n                  {useTwoFlopSizes ? <Icon name=\"checkmark\" /> : \"\"} Use Two\n                  Flop Betsize\n                </>\n              }\n              onClick={() => dispatch(changeUseOneFlopBetsize(true))}\n            />\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Item>\n      <Menu.Item>\n        <Dropdown text=\"Tutorials\">\n          <Dropdown.Menu>\n            <Dropdown.Item\n              text=\"Quick Basic Tutorial\"\n              onClick={() => updateTourOpen(true)}\n            />\n          </Dropdown.Menu>\n        </Dropdown>\n        <ScenarioLoader\n          active={state.active}\n          onCloseModal={onCloseModal}\n          token={token}\n        />\n      </Menu.Item>\n      {isAuthenticated ? (\n        <Fragment>\n          <Menu.Item>{user.name || \"\"}</Menu.Item>\n          <Menu.Item onClick={() => logout()}>Logout</Menu.Item>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Menu.Item onClick={() => loginWithRedirect()}>Login</Menu.Item>\n        </Fragment>\n      )}\n    </Menu>\n  );\n};\n\nconst mapStateToProps = () => {\n  const getMode = makeSelectMode();\n  const getSelectedStreet = makeSelectSelectedStreet();\n  const getDeadcards = makeSelectDeadcards();\n  const getRange = makeSelectRange();\n  const getRangeRepoIP = makeSelectRangeRepoIP();\n  const getRangeRepoOOP = makeSelectRangeRepoOOP();\n\n  const mapState = (state) => {\n    return {\n      selectedRanges: getRange(state),\n      rangeRepoIP: getRangeRepoIP(state),\n      rangeRepoOOP: getRangeRepoOOP(state),\n      mode: getMode(state),\n      selectedStreet: getSelectedStreet(state),\n      deadcards: getDeadcards(state),\n    };\n  };\n  return mapState;\n}; //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(Navbar);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"react-bootstrap/Container\";\n\nconst StyledContainer = styled(Container)`\n  padding: 0px !important;\n  @media (min-width: 1200px) {\n    display: block;\n    margin-top: 30px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst MainContainer = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n\nexport default MainContainer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { initialState } from \"../containers/MainPage/reducer\";\nimport useInjectReducer from \"../HOC/useInjectReducer\";\nimport { resetState } from \"../containers/MainPage/actions\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    localStorage.clear();\n    localStorage.setItem(\"state\", JSON.stringify({ global: initialState }));\n    return { ...initialState, hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    //Clear localstorage to reset the app\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <h1>\n          Something went wrong. Refresh the page to restart the application.\n        </h1>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","/*\n * AppReducer\n *\n * The reducer takes care of our data. Using actions, we can\n * update our application state. To add a new action,\n * add it to the switch statement in the reducer function\n *\n */\n\nimport produce from \"immer\";\nimport {\n  LOAD_MENU,\n  LOAD_MENU_SUCCESS,\n  LOAD_MENU_ERROR,\n  LOAD_CATEGORIES,\n  LOAD_CATEGORIES_SUCCESS,\n  LOAD_CATEGORIES_ERROR,\n  LOAD_REGIONS_SUCCESS,\n  LOAD_REGIONS,\n  LOAD_REGIONS_ERROR\n} from \"./constants\";\n\n// The initial state of the App\nexport const initialState = {\n  loading: true,\n  error: false,\n  menus: {},\n  categories: false,\n  regions: { loading: true }\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst appReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case LOAD_MENU:\n        draft.menus = { [action.slug]: {} };\n        break;\n\n      case LOAD_MENU_SUCCESS:\n        draft.menus[action.menu.slug] = action.menu;\n        break;\n\n      case LOAD_MENU_ERROR:\n        draft.error = action.error;\n        break;\n\n      case LOAD_CATEGORIES:\n        draft.categories = false;\n        break;\n\n      case LOAD_CATEGORIES_SUCCESS:\n        draft.categories = action.categories;\n        break;\n\n      case LOAD_CATEGORIES_ERROR:\n        draft.error = action.error;\n        break;\n\n      case LOAD_REGIONS:\n        draft.regions.loading = true;\n        draft.regions.error = false;\n        draft.regions.data = false;\n        break;\n\n      case LOAD_REGIONS_SUCCESS:\n        draft.regions.data = action.regions;\n        draft.regions.loading = false;\n        break;\n\n      case LOAD_REGIONS_ERROR:\n        draft.regions.error = action.error;\n        draft.regions.loading = false;\n        break;\n    }\n  });\n\nexport default appReducer;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (error) {\n    // Ignore write errors\n  }\n};\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport createReducer from \"./reducers\";\nimport { loadState } from \"./localStorage\";\nimport initialStates from \"./containers/MainPage/reducer\";\n\nexport default function configureStore(initialState = initialStates, history) {\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {};\n\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== \"production\" && typeof window === \"object\") {\n    /* eslint-disable no-underscore-dangle */\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n\n    // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n    // /* eslint-enable */\n  }\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  const persistedState = loadState();\n\n  const store = createStore(\n    createReducer(),\n    // initialState,\n    persistedState,\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n\n  return store;\n}\n","import React, { useEffect, useState, useRef, Fragment, memo } from \"react\";\nimport \"./App.css\";\nimport MainPage from \"../MainPage/index\";\nimport { Menu } from \"semantic-ui-react\";\nimport { useDispatch, useSelector, Provider } from \"react-redux\";\nimport { useInjectReducer } from \"../../HOC/useInjectReducer\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport styled from \"styled-components\";\n\nimport reducer from \"../MainPage/reducer\";\nimport Navbar from \"../../components/NavBar\";\nimport MainContainer from \"../../components/MainContainer\";\n\nimport Tour from \"reactour\";\nimport { ErrorBoundary } from \"../../utils/ErrorBoundary\";\n\nimport { initialState } from \"./reducer.js\";\nimport history from \"../../utils/history\";\nimport configureStore from \"../../configureStore\";\nimport { createWaiter } from \"../../create-waiter\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { Widget, addResponseMessage, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\nimport { initStartConversation } from \"../MainPage/actions\";\nconst key = \"global\";\n\nconst StyledFragment = styled.div`\n  background-color: #e2e3e6;\n`;\nconst steps = [\n  {\n    selector: \"button#streetFirstChoice\",\n    content:\n      \"First pick your betting pattern, Raise/4Bet/Call, in this case you will select your strongest hands that you always raise with. Note: you may have to click back and forth to get the right button highlighted. \",\n  },\n  {\n    selector: \"button#colorButtonAA\",\n    content:\n      \"AA is by far the strongest hand in holdem, select this hand by turning the table column green to go in your strongest hand range \",\n  },\n  {\n    selector: \"button#streetSecondChoice\",\n    content:\n      \"Next we are going to take one of our strongest hands and turn it into a bluff when someone raises us. Select Raise4BetFold next. \",\n  },\n  {\n    selector: \"button#colorButtonAQo\",\n    content:\n      \"AQo makes the perfect bluffing hand. Its strong enough to raise first in, and has cards that block the strongest hands in the game. Go ahead and select AQo.\",\n  },\n  {\n    selector: \"#Raise4BetValueTutorial\",\n    content:\n      \"How often are we bluffing raising just AA and AQo? Looks like we valuebet with aces 33% of the time!\",\n  },\n  {\n    selector: \"#Raise4BetBluffTutorial\",\n    content:\n      \"How often are we bluffing raising just AA and AQo? Looks like we bluff twice as often at 67% as much as we valuebet. This ratio is much too high, we should now add kings and AKs to our range to balance our range.\",\n  },\n  {\n    selector: \"button#streetFirstChoice\",\n    content:\n      \"We better put more hands into our value range, so lets go ahead and select Raise4BetCall again. \",\n  },\n  {\n    selector: \"button#colorButtonKK , button#colorButtonAKs\",\n    content: \"You can select AKs, to balance out your range.\",\n  },\n  {\n    selector: \"#Raise4BetBluffTutorial\",\n    content:\n      \"This is fantastic, now we are only bluffing approximately less than half the time! If someone tries to rebluff our raise back at them, they will be greeted with an allin against a very strong hand much too often for this to be a profitable move\",\n  },\n];\nconst store = configureStore(initialState, history);\n\nconst waitForData = createWaiter(store, (state) => state);\n\nconst App = ({ global }) => {\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n  useInjectReducer({ key, reducer });\n  const dispatch = useDispatch();\n  const [isTourOpen, updateTourOpen] = useState(false);\n  const { getAccessTokenSilently } = useAuth0();\n  const [token, updateToken] = useState();\n\n  const closeTour = () => updateTourOpen(false);\n  \n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    dispatch(initStartConversation());\n    // Now send the message throught the backend API\n  };\n\n  useEffect(() => {\n    addResponseMessage('Welcome from support. How can we help you?');\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: `https://dev-824eb3ar.us.auth0.com/api/v2/`,\n          scope: \"read:current_user update:current_user_metadata\",\n        });\n        updateToken(accessToken);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  return (\n    <>\n      <nav>\n        <MainContainer>\n          <Navbar\n            isAuthenticated={isAuthenticated}\n            loginWithRedirect={loginWithRedirect}\n            logout={logout}\n            user={user}\n            token={token}\n            updateTourOpen={updateTourOpen}\n          />\n        </MainContainer>\n      </nav>\n      <main>\n        <MainContainer>\n          <MainPage token={token} />\n          <Tour steps={steps} isOpen={isTourOpen} onRequestClose={closeTour} />\n          <Menu inverted>\n            <Menu.Item>Copyright poker-range-appalyzer.com</Menu.Item>\n          </Menu>\n        </MainContainer>\n\n      </main>\n      <Widget \n        handleNewUserMessage={handleNewUserMessage}\n        title=\"Poker Range Appalyzer\"\n        subtitle=\"Welcome to Support\" \n      />\n    </>\n  );\n};\n\nconst withConnect = connect(null, null);\n\nexport default compose(withConnect, memo)(App);\n","import throttle from \"lodash/throttle\";\nimport { saveState } from \"./localStorage\";\nimport { initialState } from \"./containers/MainPage/reducer\";\nimport { createSelector } from \"reselect\";\n\nconst createWaiter = (store, stateSelector) => async () => {\n  const state = stateSelector(store.getState());\n  /* \n    as this method is called each time we mount our \n    compoment we need to return early when \n    our data has loaded\n    */\n  // if (!state.isLoading) {\n  //   if (state.error != null) {\n  //     throw state.error;\n  //   }\n  // }\n  /* \n    if our data isn't ready then we can throw our \n    promise to kick us into the loading state\n    */\n  return await new Promise((resolve, reject) => {\n    const unsubscribe = store.subscribe(() => {\n      const state = stateSelector(store.getState());\n\n      // resolve when our data has loaded or throw an Error\n      //   if (!state.isLoading) {\n      if (state.error != null) {\n        store.setState(\"state\", initialState);\n        unsubscribe();\n        return reject();\n      }\n      unsubscribe();\n      return resolve;\n      //   }\n    });\n\n    return createSelector(\n      state => state,\n      global => global\n    );\n  });\n};\n\nexport { createWaiter };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"semantic-ui-less/semantic.less\";\n\nimport throttle from \"lodash/throttle\";\nimport { saveState } from \"./localStorage\";\nimport configureStore from \"./configureStore\";\nimport { initialState } from \"./containers/MainPage/reducer.js\";\nimport history from \"./utils/history\";\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport config from \"./auth_config\";\nimport { ErrorBoundary } from \"./utils/ErrorBoundary\";\n\nimport HttpsRedirect from \"react-https-redirect\";\n\n//const store = createStore(combineReducers({rootReducer, handRangesAvailable}), applyMiddleware(thunk));\n// Create redux store with history\n//const initialState = {};\nconst store = configureStore(initialState, history);\n\nstore.subscribe(\n  throttle(() => {\n    try {\n      const { global, user } = store.getState();\n      saveState({ global, user });\n    } catch {\n      saveState({ global: initialState, user: {} });\n    }\n  }, 1000)\n);\n\nconst siteUrl = `https://www.poker-range-appalyzer.com`;\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = (appState) => {\n  history.push(appState && siteUrl ? siteUrl : window.location.pathname);\n};\n\nReactDOM.render(\n  <ErrorBoundary>\n    <HttpsRedirect>\n      <Auth0Provider\n        domain=\"dev-824eb3ar.us.auth0.com\"\n        clientId=\"NTS7ZtvzLweGZjLhYDlhj9PsN44FDFel\"\n        redirectUri=\"https://www.poker-range-appalyzer.com\"\n        audience=\"https://dev-824eb3ar.us.auth0.com/api/v2/\"\n        scope=\"read:current_user update:current_user_metadata\"\n      >\n        <Provider store={store}>\n          <Router history={history}>\n            <Route exact path=\"/prod/prod\" component={App} />\n          </Router>\n        </Provider>\n      </Auth0Provider>\n    </HttpsRedirect>\n  </ErrorBoundary>, //{\" \"},\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}